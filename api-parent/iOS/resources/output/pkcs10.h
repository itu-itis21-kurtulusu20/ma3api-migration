/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.6, Date: 20-Feb-2014.
 */
#ifndef PKCS10_H
#define PKCS10_H

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1BerCppTypes.h"
#include "rtsrc/rtPrintToStream.h"

#include "rtsrc/ASN1CSeqOfList.h"
#include "Explicit.h"

/**
 * Header file for ASN.1 module pkcs10
 */
/**************************************************************/
/*                                                            */
/*  Attributes                                                */
/*                                                            */
/**************************************************************/
/*
Attributes ::= SET OF Attribute
*/
#define TV_PKCS10_Attributes	(TM_UNIV|TM_CONS|17)

class EXTERN ASN1C_PKCS10_Attributes;

/* List of ASN1T_EXP_Attribute */
typedef struct EXTERN ASN1T_PKCS10_Attributes : public ASN1TPDUSeqOfList {
   ~ASN1T_PKCS10_Attributes();
} ASN1T_PKCS10_Attributes;

class EXTERN ASN1C_PKCS10_Attributes :
public ASN1CSeqOfList
{
protected:
   ASN1T_PKCS10_Attributes& msgData;
public:
   ASN1C_PKCS10_Attributes (ASN1T_PKCS10_Attributes& data);
   ASN1C_PKCS10_Attributes (OSRTMessageBufferIF& msgBuf
      , ASN1T_PKCS10_Attributes& data);
   ASN1C_PKCS10_Attributes (ASN1CType& ccobj, ASN1T_PKCS10_Attributes& data);
   ASN1C_PKCS10_Attributes (OSRTContext &context, ASN1T_PKCS10_Attributes& data
      );
   ASN1C_PKCS10_Attributes (ASN1C_PKCS10_Attributes& original);
   virtual ~ASN1C_PKCS10_Attributes () {}
   inline ASN1T_PKCS10_Attributes& getData () { return msgData; }
   inline const ASN1T_PKCS10_Attributes& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   int EncodeTo (OSRTMessageBufferIF& msgBuf);
   int DecodeFrom (OSRTMessageBufferIF& msgBuf);

   void MemFree ();
   void Print (const char* name = "Attributes");
   int toStream (const char* name = "Attributes");
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
   OSBOOL Equals (ASN1T_PKCS10_Attributes* pCmpValue, 
      char* errBuff, OSSIZE errBuffSize);
   ASN1T_PKCS10_Attributes& getCopy (ASN1T_PKCS10_Attributes* pDstData = 0);
   ASN1T_PKCS10_Attributes* newCopy ();

   ASN1C_PKCS10_Attributes& operator= (ASN1C_PKCS10_Attributes& srcData);
   void Append (ASN1T_EXP_Attribute* elem);
   ASN1T_EXP_Attribute* NewElement ();
   ASN1T_EXP_Attribute* AppendNewElement ();
} ;

EXTERN int asn1E_PKCS10_Attributes (OSCTXT* pctxt,
   ASN1T_PKCS10_Attributes *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PKCS10_Attributes (OSCTXT* pctxt, 
   ASN1T_PKCS10_Attributes* pvalue, ASN1TagType tagging, int length);

EXTERN void asn1Print_PKCS10_Attributes 
   (const char* name, const ASN1T_PKCS10_Attributes* pvalue);

EXTERN int asn1PrtToStrm_PKCS10_Attributes (OSCTXT *pctxt, 
   const char* name, const ASN1T_PKCS10_Attributes* pvalue);

EXTERN OSBOOL asn1Compare_PKCS10_Attributes (const char* name, 
   ASN1T_PKCS10_Attributes* pValue, ASN1T_PKCS10_Attributes* pCmpValue, 
   char* errBuff, OSSIZE errBuffSize);

EXTERN void asn1Copy_PKCS10_Attributes (OSCTXT* pctxt, 
   ASN1T_PKCS10_Attributes* pSrcValue, ASN1T_PKCS10_Attributes* pDstValue);

EXTERN void asn1Init_PKCS10_Attributes (ASN1T_PKCS10_Attributes* pvalue);

EXTERN void asn1Free_PKCS10_Attributes (OSCTXT *pctxt, 
   ASN1T_PKCS10_Attributes* pvalue);

/**************************************************************/
/*                                                            */
/*  CertificationRequestInfo                                  */
/*                                                            */
/**************************************************************/
/*
CertificationRequestInfo ::= SEQUENCE {
   version INTEGER,
   subject Name,
   subjectPKInfo SubjectPublicKeyInfo,
   attributes [0] Attributes
}
*/
#define TV_PKCS10_CertificationRequestInfo	(TM_UNIV|TM_CONS|16)

class EXTERN ASN1C_PKCS10_CertificationRequestInfo;

struct EXTERN ASN1T_PKCS10_CertificationRequestInfo : public ASN1TPDU {
   OSINT32 version;
   ASN1T_EXP_Name subject;
   ASN1T_EXP_SubjectPublicKeyInfo subjectPKInfo;
   ASN1T_PKCS10_Attributes attributes;
   ASN1T_PKCS10_CertificationRequestInfo ();
   ASN1T_PKCS10_CertificationRequestInfo (ASN1C_PKCS10_CertificationRequestInfo& srcData);
   ~ASN1T_PKCS10_CertificationRequestInfo ();
} ;

class EXTERN ASN1C_PKCS10_CertificationRequestInfo :
public ASN1CType
{
protected:
   ASN1T_PKCS10_CertificationRequestInfo& msgData;
public:
   ASN1C_PKCS10_CertificationRequestInfo
       (ASN1T_PKCS10_CertificationRequestInfo& data);
   ASN1C_PKCS10_CertificationRequestInfo (OSRTMessageBufferIF& msgBuf
      , ASN1T_PKCS10_CertificationRequestInfo& data);
   ASN1C_PKCS10_CertificationRequestInfo (OSRTContext &context
      , ASN1T_PKCS10_CertificationRequestInfo& data);
   ASN1C_PKCS10_CertificationRequestInfo (ASN1C_PKCS10_CertificationRequestInfo& original);
   virtual ~ASN1C_PKCS10_CertificationRequestInfo () {}
   inline ASN1T_PKCS10_CertificationRequestInfo& getData () { return msgData; }
   inline const ASN1T_PKCS10_CertificationRequestInfo& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   int EncodeTo (OSRTMessageBufferIF& msgBuf);
   int DecodeFrom (OSRTMessageBufferIF& msgBuf);

   void MemFree ();
   void Print (const char* name = "CertificationRequestInfo");
   int toStream (const char* name = "CertificationRequestInfo");
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
   OSBOOL Equals (ASN1T_PKCS10_CertificationRequestInfo* pCmpValue, 
      char* errBuff, OSSIZE errBuffSize);
   ASN1T_PKCS10_CertificationRequestInfo& getCopy (ASN1T_PKCS10_CertificationRequestInfo* pDstData = 0);
   ASN1T_PKCS10_CertificationRequestInfo* newCopy ();

   inline ASN1C_PKCS10_CertificationRequestInfo& operator= (ASN1C_PKCS10_CertificationRequestInfo& srcData) {
      srcData.getCopy (&msgData);
      return *this;
   }
} ;

EXTERN int asn1E_PKCS10_CertificationRequestInfo (OSCTXT* pctxt,
   ASN1T_PKCS10_CertificationRequestInfo *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PKCS10_CertificationRequestInfo (OSCTXT* pctxt, 
   ASN1T_PKCS10_CertificationRequestInfo* pvalue, ASN1TagType tagging, 
   int length);

EXTERN void asn1Print_PKCS10_CertificationRequestInfo 
   (const char* name, const ASN1T_PKCS10_CertificationRequestInfo* pvalue);

EXTERN int asn1PrtToStrm_PKCS10_CertificationRequestInfo (OSCTXT *pctxt, 
   const char* name, const ASN1T_PKCS10_CertificationRequestInfo* pvalue);

EXTERN ASN1T_PKCS10_CertificationRequestInfo* 
   new_ASN1T_PKCS10_CertificationRequestInfo (ASN1CType& ccobj);

EXTERN OSBOOL asn1Compare_PKCS10_CertificationRequestInfo (const char* name, 
   ASN1T_PKCS10_CertificationRequestInfo* pValue, 
   ASN1T_PKCS10_CertificationRequestInfo* pCmpValue, char* errBuff, 
   OSSIZE errBuffSize);

EXTERN void asn1Copy_PKCS10_CertificationRequestInfo (OSCTXT* pctxt, 
   ASN1T_PKCS10_CertificationRequestInfo* pSrcValue, 
   ASN1T_PKCS10_CertificationRequestInfo* pDstValue);

EXTERN void asn1Init_PKCS10_CertificationRequestInfo (
   ASN1T_PKCS10_CertificationRequestInfo* pvalue);

EXTERN void asn1Free_PKCS10_CertificationRequestInfo (OSCTXT *pctxt, 
   ASN1T_PKCS10_CertificationRequestInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  CertificationRequest                                      */
/*                                                            */
/**************************************************************/
/*
CertificationRequest ::= SEQUENCE {
   certificationRequestInfo CertificationRequestInfo,
   signatureAlgorithm AlgorithmIdentifier,
   signature BIT STRING 
}
*/
#define TV_PKCS10_CertificationRequest	(TM_UNIV|TM_CONS|16)

class EXTERN ASN1C_PKCS10_CertificationRequest;

struct EXTERN ASN1T_PKCS10_CertificationRequest : public ASN1TPDU {
   ASN1T_PKCS10_CertificationRequestInfo certificationRequestInfo;
   ASN1T_EXP_AlgorithmIdentifier signatureAlgorithm;
   ASN1TDynBitStr signature_;
   ASN1T_PKCS10_CertificationRequest ();
   ASN1T_PKCS10_CertificationRequest (ASN1C_PKCS10_CertificationRequest& srcData);
   ~ASN1T_PKCS10_CertificationRequest ();
} ;

class EXTERN ASN1C_PKCS10_CertificationRequest :
public ASN1CType
{
protected:
   ASN1T_PKCS10_CertificationRequest& msgData;
public:
   ASN1C_PKCS10_CertificationRequest (ASN1T_PKCS10_CertificationRequest& data);
   ASN1C_PKCS10_CertificationRequest (OSRTMessageBufferIF& msgBuf
      , ASN1T_PKCS10_CertificationRequest& data);
   ASN1C_PKCS10_CertificationRequest (OSRTContext &context
      , ASN1T_PKCS10_CertificationRequest& data);
   ASN1C_PKCS10_CertificationRequest (ASN1C_PKCS10_CertificationRequest& original);
   virtual ~ASN1C_PKCS10_CertificationRequest () {}
   inline ASN1T_PKCS10_CertificationRequest& getData () { return msgData; }
   inline const ASN1T_PKCS10_CertificationRequest& getData () const { return msgData; }

   // standard encode/decode methods (defined in ASN1CType base class):
   // int Encode ();
   // int Decode ();

   // stream encode/decode methods:
   int EncodeTo (OSRTMessageBufferIF& msgBuf);
   int DecodeFrom (OSRTMessageBufferIF& msgBuf);

   void MemFree ();
   void Print (const char* name = "CertificationRequest");
   int toStream (const char* name = "CertificationRequest");
   int setPrintStream (rtxPrintCallback strmCallback, void* pStrmInfo);
   OSBOOL Equals (ASN1T_PKCS10_CertificationRequest* pCmpValue, 
      char* errBuff, OSSIZE errBuffSize);
   ASN1T_PKCS10_CertificationRequest& getCopy (ASN1T_PKCS10_CertificationRequest* pDstData = 0);
   ASN1T_PKCS10_CertificationRequest* newCopy ();

   inline ASN1C_PKCS10_CertificationRequest& operator= (ASN1C_PKCS10_CertificationRequest& srcData) {
      srcData.getCopy (&msgData);
      return *this;
   }
} ;

EXTERN int asn1E_PKCS10_CertificationRequest (OSCTXT* pctxt,
   ASN1T_PKCS10_CertificationRequest *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PKCS10_CertificationRequest (OSCTXT* pctxt, 
   ASN1T_PKCS10_CertificationRequest* pvalue, ASN1TagType tagging, int length);

EXTERN void asn1Print_PKCS10_CertificationRequest 
   (const char* name, const ASN1T_PKCS10_CertificationRequest* pvalue);

EXTERN int asn1PrtToStrm_PKCS10_CertificationRequest (OSCTXT *pctxt, 
   const char* name, const ASN1T_PKCS10_CertificationRequest* pvalue);

EXTERN ASN1T_PKCS10_CertificationRequest* 
   new_ASN1T_PKCS10_CertificationRequest (ASN1CType& ccobj);

EXTERN OSBOOL asn1Compare_PKCS10_CertificationRequest (const char* name, 
   ASN1T_PKCS10_CertificationRequest* pValue, 
   ASN1T_PKCS10_CertificationRequest* pCmpValue, char* errBuff, 
   OSSIZE errBuffSize);

EXTERN void asn1Copy_PKCS10_CertificationRequest (OSCTXT* pctxt, 
   ASN1T_PKCS10_CertificationRequest* pSrcValue, 
   ASN1T_PKCS10_CertificationRequest* pDstValue);

EXTERN void asn1Init_PKCS10_CertificationRequest (
   ASN1T_PKCS10_CertificationRequest* pvalue);

EXTERN void asn1Free_PKCS10_CertificationRequest (OSCTXT *pctxt, 
   ASN1T_PKCS10_CertificationRequest* pvalue);

#endif
