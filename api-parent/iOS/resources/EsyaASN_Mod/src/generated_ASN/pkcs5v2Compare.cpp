/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.6, Date: 28-Feb-2014.
 */
#include "pkcs5v2.h"
#include "rtsrc/rtCompare.h"
#include "rtxsrc/rtxCommon.h"

OSBOOL asn1Compare_PKCS5_PBEParameter_salt (const char* name, 
   ASN1T_PKCS5_PBEParameter_salt* pValue, 
   ASN1T_PKCS5_PBEParameter_salt* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   return rtCmpOctStr (name, pValue->numocts, pValue->data, 
      pCmpValue->numocts, pCmpValue->data, errBuff, errBuffSize);
}

OSBOOL ASN1C_PKCS5_PBEParameter_salt::Equals (ASN1T_PKCS5_PBEParameter_salt* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_PBEParameter_salt ("PBEParameter_salt", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_RC2_CBC_Parameter_iv (const char* name, 
   ASN1T_PKCS5_RC2_CBC_Parameter_iv* pValue, 
   ASN1T_PKCS5_RC2_CBC_Parameter_iv* pCmpValue, char* errBuff, 
   OSSIZE errBuffSize)
{
   return rtCmpOctStr (name, pValue->numocts, pValue->data, 
      pCmpValue->numocts, pCmpValue->data, errBuff, errBuffSize);
}

OSBOOL ASN1C_PKCS5_RC2_CBC_Parameter_iv::Equals (ASN1T_PKCS5_RC2_CBC_Parameter_iv* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_RC2_CBC_Parameter_iv ("RC2_CBC_Parameter_iv", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_RC5_CBC_Parameters_version (const char* name, 
   ASN1T_PKCS5_RC5_CBC_Parameters_version* pValue, 
   ASN1T_PKCS5_RC5_CBC_Parameters_version* pCmpValue, char* errBuff, 
   OSSIZE errBuffSize)
{
   return rtCmpUInt8 (name, *pValue, *pCmpValue, errBuff, errBuffSize);
}

OSBOOL ASN1C_PKCS5_RC5_CBC_Parameters_version::Equals (ASN1T_PKCS5_RC5_CBC_Parameters_version* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_RC5_CBC_Parameters_version ("RC5_CBC_Parameters_version", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_PBKDF2_params_salt (const char* name, 
   ASN1T_PKCS5_PBKDF2_params_salt* pValue, 
   ASN1T_PKCS5_PBKDF2_params_salt* pCmpValue, char* errBuff, 
   OSSIZE errBuffSize)
{
   char namebuf[512];
   OSBOOL retval = TRUE;

   if ( !rtCmpTag (name,
   pValue->t,
   pCmpValue->t, errBuff, errBuffSize))
   {
      return FALSE;
   }
   switch (pValue->t)
   {
      /* specified */
      case 1:
         rtxStrJoin (namebuf, 512, name, ".u.specified", 0, 0, 0);
         if ( !rtCmpOctStr (namebuf, pValue->u.specified->numocts, 
            pValue->u.specified->data, pCmpValue->u.specified->numocts, 
            pCmpValue->u.specified->data, errBuff, errBuffSize)) 
         {
            retval = FALSE;
         }
         break;

      /* otherSource */
      case 2:
         rtxStrJoin (namebuf, 512, name, ".u.otherSource", 0, 0, 0);
         if (! asn1Compare_EXP_AlgorithmIdentifier (namebuf, pValue->u.otherSource, pCmpValue->u.otherSource, errBuff, errBuffSize)) 
         {
            retval = FALSE;
         }
         break;

      default:;
   }
   return retval;
}

OSBOOL ASN1C_PKCS5_PBKDF2_params_salt::Equals (ASN1T_PKCS5_PBKDF2_params_salt* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_PBKDF2_params_salt ("PBKDF2_params_salt", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_PBKDF2_params (const char* name, 
   ASN1T_PKCS5_PBKDF2_params* pValue, ASN1T_PKCS5_PBKDF2_params* pCmpValue, 
   char* errBuff, OSSIZE errBuffSize)
{
   char namebuf[512];
   OSBOOL retval = TRUE;

   rtxStrJoin (namebuf, 512, name, ".salt", 0, 0, 0);
   if (! asn1Compare_PKCS5_PBKDF2_params_salt (namebuf, &pValue->salt, &pCmpValue->salt, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   rtxStrJoin (namebuf, 512, name, ".iterationCount", 0, 0, 0);
   if ( !rtCmpUnsigned (namebuf, pValue->iterationCount, pCmpValue->iterationCount, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   rtxStrJoin (namebuf, 512, name, ".keyLength", 0, 0, 0);
   if (!rtCmpOptional (namebuf,
   pValue->m.keyLengthPresent,
   pCmpValue->m.keyLengthPresent, errBuff, errBuffSize))
   {
      retval = FALSE;
   }
   else if(pValue->m.keyLengthPresent) 
   {
      if ( !rtCmpUnsigned (namebuf, pValue->keyLength, pCmpValue->keyLength, errBuff, errBuffSize)) 
      {
         retval = FALSE;
      }
   }

   rtxStrJoin (namebuf, 512, name, ".prf", 0, 0, 0);
   if (!rtCmpOptional (namebuf,
   pValue->m.prfPresent,
   pCmpValue->m.prfPresent, errBuff, errBuffSize))
   {
      retval = FALSE;
   }
   else if(pValue->m.prfPresent) 
   {
      if (! asn1Compare_EXP_AlgorithmIdentifier (namebuf, &pValue->prf, &pCmpValue->prf, errBuff, errBuffSize)) 
      {
         retval = FALSE;
      }
   }

   return retval;
}

OSBOOL ASN1C_PKCS5_PBKDF2_params::Equals (ASN1T_PKCS5_PBKDF2_params* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_PBKDF2_params ("PBKDF2_params", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_PBEParameter (const char* name, 
   ASN1T_PKCS5_PBEParameter* pValue, ASN1T_PKCS5_PBEParameter* pCmpValue, 
   char* errBuff, OSSIZE errBuffSize)
{
   char namebuf[512];
   OSBOOL retval = TRUE;

   rtxStrJoin (namebuf, 512, name, ".salt", 0, 0, 0);
   if (! asn1Compare_PKCS5_PBEParameter_salt (namebuf, &pValue->salt, &pCmpValue->salt, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   rtxStrJoin (namebuf, 512, name, ".iterationCount", 0, 0, 0);
   if ( !rtCmpInteger (namebuf, pValue->iterationCount, pCmpValue->iterationCount, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   return retval;
}

OSBOOL ASN1C_PKCS5_PBEParameter::Equals (ASN1T_PKCS5_PBEParameter* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_PBEParameter ("PBEParameter", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_PBES2_params (const char* name, 
   ASN1T_PKCS5_PBES2_params* pValue, ASN1T_PKCS5_PBES2_params* pCmpValue, 
   char* errBuff, OSSIZE errBuffSize)
{
   char namebuf[512];
   OSBOOL retval = TRUE;

   rtxStrJoin (namebuf, 512, name, ".keyDerivationFunc", 0, 0, 0);
   if (! asn1Compare_EXP_AlgorithmIdentifier (namebuf, &pValue->keyDerivationFunc, &pCmpValue->keyDerivationFunc, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   rtxStrJoin (namebuf, 512, name, ".encryptionScheme", 0, 0, 0);
   if (! asn1Compare_EXP_AlgorithmIdentifier (namebuf, &pValue->encryptionScheme, &pCmpValue->encryptionScheme, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   return retval;
}

OSBOOL ASN1C_PKCS5_PBES2_params::Equals (ASN1T_PKCS5_PBES2_params* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_PBES2_params ("PBES2_params", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_PBMAC1_params (const char* name, 
   ASN1T_PKCS5_PBMAC1_params* pValue, ASN1T_PKCS5_PBMAC1_params* pCmpValue, 
   char* errBuff, OSSIZE errBuffSize)
{
   char namebuf[512];
   OSBOOL retval = TRUE;

   rtxStrJoin (namebuf, 512, name, ".keyDerivationFunc", 0, 0, 0);
   if (! asn1Compare_EXP_AlgorithmIdentifier (namebuf, &pValue->keyDerivationFunc, &pCmpValue->keyDerivationFunc, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   rtxStrJoin (namebuf, 512, name, ".messageAuthScheme", 0, 0, 0);
   if (! asn1Compare_EXP_AlgorithmIdentifier (namebuf, &pValue->messageAuthScheme, &pCmpValue->messageAuthScheme, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   return retval;
}

OSBOOL ASN1C_PKCS5_PBMAC1_params::Equals (ASN1T_PKCS5_PBMAC1_params* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_PBMAC1_params ("PBMAC1_params", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_RC2_CBC_Parameter (const char* name, 
   ASN1T_PKCS5_RC2_CBC_Parameter* pValue, 
   ASN1T_PKCS5_RC2_CBC_Parameter* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   char namebuf[512];
   OSBOOL retval = TRUE;

   rtxStrJoin (namebuf, 512, name, ".rc2ParameterVersion", 0, 0, 0);
   if (!rtCmpOptional (namebuf,
   pValue->m.rc2ParameterVersionPresent,
   pCmpValue->m.rc2ParameterVersionPresent, errBuff, errBuffSize))
   {
      retval = FALSE;
   }
   else if(pValue->m.rc2ParameterVersionPresent) 
   {
      if ( !rtCmpInteger (namebuf, pValue->rc2ParameterVersion, pCmpValue->rc2ParameterVersion, errBuff, errBuffSize)) 
      {
         retval = FALSE;
      }
   }

   rtxStrJoin (namebuf, 512, name, ".iv", 0, 0, 0);
   if (! asn1Compare_PKCS5_RC2_CBC_Parameter_iv (namebuf, &pValue->iv, &pCmpValue->iv, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   return retval;
}

OSBOOL ASN1C_PKCS5_RC2_CBC_Parameter::Equals (ASN1T_PKCS5_RC2_CBC_Parameter* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_RC2_CBC_Parameter ("RC2_CBC_Parameter", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

OSBOOL asn1Compare_PKCS5_RC5_CBC_Parameters (const char* name, 
   ASN1T_PKCS5_RC5_CBC_Parameters* pValue, 
   ASN1T_PKCS5_RC5_CBC_Parameters* pCmpValue, char* errBuff, 
   OSSIZE errBuffSize)
{
   char namebuf[512];
   OSBOOL retval = TRUE;

   rtxStrJoin (namebuf, 512, name, ".version", 0, 0, 0);
   if (! asn1Compare_PKCS5_RC5_CBC_Parameters_version (namebuf, &pValue->version, &pCmpValue->version, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   rtxStrJoin (namebuf, 512, name, ".rounds", 0, 0, 0);
   if ( !rtCmpUInt8 (namebuf, pValue->rounds, pCmpValue->rounds, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   rtxStrJoin (namebuf, 512, name, ".blockSizeInBits", 0, 0, 0);
   if ( !rtCmpUInt8 (namebuf, pValue->blockSizeInBits, pCmpValue->blockSizeInBits, errBuff, errBuffSize)) 
   {
      retval = FALSE;
   }

   rtxStrJoin (namebuf, 512, name, ".iv", 0, 0, 0);
   if (!rtCmpOptional (namebuf,
   pValue->m.ivPresent,
   pCmpValue->m.ivPresent, errBuff, errBuffSize))
   {
      retval = FALSE;
   }
   else if(pValue->m.ivPresent) 
   {
      if ( !rtCmpOctStr (namebuf, pValue->iv.numocts, pValue->iv.data, 
         pCmpValue->iv.numocts, pCmpValue->iv.data, errBuff, errBuffSize)) 
      {
         retval = FALSE;
      }
   }

   return retval;
}

OSBOOL ASN1C_PKCS5_RC5_CBC_Parameters::Equals (ASN1T_PKCS5_RC5_CBC_Parameters* pCmpValue, char* errBuff, OSSIZE errBuffSize)
{
   if (asn1Compare_PKCS5_RC5_CBC_Parameters ("RC5_CBC_Parameters", &msgData, pCmpValue, errBuff, errBuffSize))
   {
      return TRUE;
   }
   return FALSE;
}

