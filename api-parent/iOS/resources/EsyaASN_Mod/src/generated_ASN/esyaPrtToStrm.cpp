/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.6, Date: 28-Feb-2014.
 */
#include "esya.h"
#include "rtsrc/rtPrintToStream.h"
#include "rtxsrc/rtxCommon.h"

int asn1PrtToStrm_ESYA_ESYAGizlilikBilgisi (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_ESYAGizlilikBilgisi* pvalue)
{
   {
      char namebuf[512];
      OSBOOL printNamebuf = TRUE;

      rtPrintToStreamIndent (pctxt);
      rtxStrcpy (namebuf, 512, name);
      rtxStrcat (namebuf, 512, " = ");
      switch (*pvalue) {
         case 0: rtxStrcat (namebuf, 512, "tanimlanmamis\n");break;
         case 1: rtxStrcat (namebuf, 512, "tasnifDisi\n");break;
         case 2: rtxStrcat (namebuf, 512, "hizmeteOzel\n");break;
         case 3: rtxStrcat (namebuf, 512, "ozel\n");break;
         case 4: rtxStrcat (namebuf, 512, "gizli\n");break;
         default:
            rtPrintToStreamInteger (pctxt, name, *pvalue);
            printNamebuf = FALSE;
      }

      if (printNamebuf) rtxPrintToStream (pctxt, namebuf);
   }
   return 0;
}

int ASN1C_ESYA_ESYAGizlilikBilgisi::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_ESYAGizlilikBilgisi (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_ESYAGizlilikBilgisi::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

int asn1PrtToStrm_ESYA_ESYASifreliVeri (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_ESYASifreliVeri* pvalue)
{
   rtPrintToStreamOpenBrace (pctxt, name);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamHexStr (pctxt, "sifreliAnahtar", pvalue->sifreliAnahtar.numocts, pvalue->sifreliAnahtar.data);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamHexStr (pctxt, "sifreliVeri", pvalue->sifreliVeri.numocts, pvalue->sifreliVeri.data);

   rtPrintToStreamCloseBrace (pctxt);
   return 0;
}

int ASN1C_ESYA_ESYASifreliVeri::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_ESYASifreliVeri (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_ESYASifreliVeri::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

int asn1PrtToStrm_ESYA_ESYASimetrikAnahtar (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_ESYASimetrikAnahtar* pvalue)
{
   rtPrintToStreamOpenBrace (pctxt, name);

   asn1PrtToStrm_EXP_AlgorithmIdentifier (pctxt, "algorithm", &pvalue->algorithm);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamHexStr (pctxt, "simetrikAnahtar", pvalue->simetrikAnahtar.numocts, pvalue->simetrikAnahtar.data);

   rtPrintToStreamCloseBrace (pctxt);
   return 0;
}

int ASN1C_ESYA_ESYASimetrikAnahtar::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_ESYASimetrikAnahtar (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_ESYASimetrikAnahtar::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

int asn1PrtToStrm_ESYA_ESYASimImzAnahtari (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_ESYASimImzAnahtari* pvalue)
{
   rtPrintToStreamOpenBrace (pctxt, name);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamInteger (pctxt, "anahNo", pvalue->anahNo);

   asn1PrtToStrm_EXP_AlgorithmIdentifier (pctxt, "hashAlg", &pvalue->hashAlg);

   asn1PrtToStrm_EXP_AlgorithmIdentifier (pctxt, "simetrikAlg", &pvalue->simetrikAlg);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamHexStr (pctxt, "anahtarBytes", pvalue->anahtarBytes.numocts, pvalue->anahtarBytes.data);

   rtPrintToStreamCloseBrace (pctxt);
   return 0;
}

int ASN1C_ESYA_ESYASimImzAnahtari::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_ESYASimImzAnahtari (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_ESYASimImzAnahtari::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

int asn1PrtToStrm_ESYA_ESYASimImzAnahtarlari (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_ESYASimImzAnahtarlari* pvalue)
{
   ASN1T_ESYA_ESYASimImzAnahtari* pdata0;
   OSRTDListNode* pnode;
   char namebuf[512], numbuf[32];
   OSUINT32 xx1;

   pnode = pvalue->head;
   for (xx1 = 0; xx1 < pvalue->count; xx1++) {
      pdata0 = (ASN1T_ESYA_ESYASimImzAnahtari*) pnode->data;
      rtxUIntToCharStr (xx1, numbuf, sizeof(numbuf), 0);
      rtxStrJoin (namebuf, sizeof(namebuf), name, "[", numbuf, "]", 0);
      asn1PrtToStrm_ESYA_ESYASimImzAnahtari (pctxt, namebuf, pdata0);
      pnode = pnode->next;
   }
   return 0;
}

int ASN1C_ESYA_ESYASimImzAnahtarlari::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_ESYASimImzAnahtarlari (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_ESYASimImzAnahtarlari::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

int asn1PrtToStrm_ESYA_ESYAVTImza (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_ESYAVTImza* pvalue)
{
   rtPrintToStreamOpenBrace (pctxt, name);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamInteger (pctxt, "anahNo", pvalue->anahNo);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamHexStr (pctxt, "imzaliVeri", pvalue->imzaliVeri.numocts, pvalue->imzaliVeri.data);

   rtPrintToStreamCloseBrace (pctxt);
   return 0;
}

int ASN1C_ESYA_ESYAVTImza::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_ESYAVTImza (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_ESYAVTImza::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

int asn1PrtToStrm_ESYA_ESYAPasswordRecipientInfo (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_ESYAPasswordRecipientInfo* pvalue)
{
   rtPrintToStreamOpenBrace (pctxt, name);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamInteger (pctxt, "version", pvalue->version);

   if (pvalue->m.keyDerivationAlgorithmPresent) {
      asn1PrtToStrm_EXP_AlgorithmIdentifier (pctxt, "keyDerivationAlgorithm", &pvalue->keyDerivationAlgorithm);
   }

   asn1PrtToStrm_EXP_AlgorithmIdentifier (pctxt, "keyEncryptionAlgorithm", &pvalue->keyEncryptionAlgorithm);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamHexStr (pctxt, "encryptedKey", pvalue->encryptedKey.numocts, pvalue->encryptedKey.data);

   asn1PrtToStrm_PKCS7_DigestInfo (pctxt, "keyHash", &pvalue->keyHash);

   rtPrintToStreamCloseBrace (pctxt);
   return 0;
}

int ASN1C_ESYA_ESYAPasswordRecipientInfo::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_ESYAPasswordRecipientInfo (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_ESYAPasswordRecipientInfo::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

int asn1PrtToStrm_ESYA_EsyaGroupRecipientInfo (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_EsyaGroupRecipientInfo* pvalue)
{
   rtPrintToStreamOpenBrace (pctxt, name);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamInteger (pctxt, "gid", pvalue->gid);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamInteger (pctxt, "groupIndex", pvalue->groupIndex);

   rtPrintToStreamIndent (pctxt);
   rtPrintToStreamInteger (pctxt, "groupSize", pvalue->groupSize);

   asn1PrtToStrm_CMS_RecipientIdentifier (pctxt, "rid", &pvalue->rid);

   asn1PrtToStrm_PKCS7_KeyEncryptionAlgorithmIdentifier (pctxt, "keyEncryptionAlgorithm", &pvalue->keyEncryptionAlgorithm);

   asn1PrtToStrm_PKCS7_EncryptedKey (pctxt, "encryptedKey", &pvalue->encryptedKey);

   rtPrintToStreamCloseBrace (pctxt);
   return 0;
}

int ASN1C_ESYA_EsyaGroupRecipientInfo::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_EsyaGroupRecipientInfo (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_EsyaGroupRecipientInfo::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

int asn1PrtToStrm_ESYA_ESYAFileInfoRecipientInfo (OSCTXT *pctxt, 
   const char* name, const ASN1T_ESYA_ESYAFileInfoRecipientInfo* pvalue)
{
   rtPrintToStreamOpenBrace (pctxt, name);

   asn1PrtToStrm_ESYA_ESYAGizlilikBilgisi (pctxt, "gizlilikBilgisi", &pvalue->gizlilikBilgisi);

   rtPrintToStreamCloseBrace (pctxt);
   return 0;
}

int ASN1C_ESYA_ESYAFileInfoRecipientInfo::toStream (const char* name)

{
   asn1PrtToStrm_ESYA_ESYAFileInfoRecipientInfo (getCtxtPtr(), name, &msgData);
   return 0;
}

int ASN1C_ESYA_ESYAFileInfoRecipientInfo::setPrintStream
(rtxPrintCallback strmCallback, void * pStrmInfo)

{
   return rtxSetPrintStream (getCtxtPtr(), strmCallback, pStrmInfo);
}

