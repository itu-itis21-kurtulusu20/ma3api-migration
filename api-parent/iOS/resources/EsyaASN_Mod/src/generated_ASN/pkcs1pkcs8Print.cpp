/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.6, Date: 28-Feb-2014.
 */
#include "pkcs1pkcs8.h"
#include "rtsrc/rtPrint.h"
#include "rtxsrc/rtxCommon.h"

void asn1Print_PKCS18_PrivateKey 
   (const char* name, const ASN1T_PKCS18_PrivateKey* pvalue)
{
   rtxPrintIndent ();
   rtxPrintHexStr (name, pvalue->numocts, pvalue->data);
}

void ASN1C_PKCS18_PrivateKey::Print (const char* name)
{
   asn1Print_PKCS18_PrivateKey (name, &msgData);
}

void asn1Print_PKCS18_EncryptedData 
   (const char* name, const ASN1T_PKCS18_EncryptedData* pvalue)
{
   rtxPrintIndent ();
   rtxPrintHexStr (name, pvalue->numocts, pvalue->data);
}

void ASN1C_PKCS18_EncryptedData::Print (const char* name)
{
   asn1Print_PKCS18_EncryptedData (name, &msgData);
}

void asn1Print_PKCS18_PrivateKeyInfo 
   (const char* name, const ASN1T_PKCS18_PrivateKeyInfo* pvalue)
{
   rtxPrintOpenBrace (name);

   asn1Print_EXP_Version ("version", &pvalue->version);

   asn1Print_EXP_AlgorithmIdentifier ("privateKeyAlgorithm", &pvalue->
      privateKeyAlgorithm);

   asn1Print_PKCS18_PrivateKey ("privateKey", &pvalue->privateKey);

   if (pvalue->m.attributesPresent) {
      asn1Print_PKCS10_Attributes ("attributes", &pvalue->attributes);
   }

   rtxPrintCloseBrace ();
}

void ASN1C_PKCS18_PrivateKeyInfo::Print (const char* name)
{
   asn1Print_PKCS18_PrivateKeyInfo (name, &msgData);
}

void asn1Print_PKCS18_EncryptedPrivateKeyInfo 
   (const char* name, const ASN1T_PKCS18_EncryptedPrivateKeyInfo* pvalue)
{
   rtxPrintOpenBrace (name);

   asn1Print_EXP_AlgorithmIdentifier ("encryptionAlgorithm", &pvalue->
      encryptionAlgorithm);

   asn1Print_PKCS18_EncryptedData ("encryptedData", &pvalue->encryptedData);

   rtxPrintCloseBrace ();
}

void ASN1C_PKCS18_EncryptedPrivateKeyInfo::Print (const char* name)
{
   asn1Print_PKCS18_EncryptedPrivateKeyInfo (name, &msgData);
}

void asn1Print_PKCS18_RSAPublicKey 
   (const char* name, const ASN1T_PKCS18_RSAPublicKey* pvalue)
{
   rtxPrintOpenBrace (name);

   rtxPrintIndent ();
   rtxPrintCharStr ("modulus", pvalue->modulus);

   rtxPrintIndent ();
   rtxPrintCharStr ("publicExponent", pvalue->publicExponent);

   rtxPrintCloseBrace ();
}

void ASN1C_PKCS18_RSAPublicKey::Print (const char* name)
{
   asn1Print_PKCS18_RSAPublicKey (name, &msgData);
}

void asn1Print_PKCS18_RSAPrivateKey 
   (const char* name, const ASN1T_PKCS18_RSAPrivateKey* pvalue)
{
   rtxPrintOpenBrace (name);

   asn1Print_EXP_Version ("version", &pvalue->version);

   rtxPrintIndent ();
   rtxPrintCharStr ("modulus", pvalue->modulus);

   rtxPrintIndent ();
   rtxPrintCharStr ("publicExponent", pvalue->publicExponent);

   rtxPrintIndent ();
   rtxPrintCharStr ("privateExponent", pvalue->privateExponent);

   rtxPrintIndent ();
   rtxPrintCharStr ("prime1", pvalue->prime1);

   rtxPrintIndent ();
   rtxPrintCharStr ("prime2", pvalue->prime2);

   rtxPrintIndent ();
   rtxPrintCharStr ("exponent1", pvalue->exponent1);

   rtxPrintIndent ();
   rtxPrintCharStr ("exponent2", pvalue->exponent2);

   rtxPrintIndent ();
   rtxPrintCharStr ("coefficient", pvalue->coefficient);

   rtxPrintCloseBrace ();
}

void ASN1C_PKCS18_RSAPrivateKey::Print (const char* name)
{
   asn1Print_PKCS18_RSAPrivateKey (name, &msgData);
}

