/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.6, Date: 28-Feb-2014.
 */
#include "etsiqc.h"
#include "rtxsrc/rtxCommon.h"

EXTERN int asn1E_ETSIQC_Iso4217CurrencyCode (OSCTXT* pctxt,
   ASN1T_ETSIQC_Iso4217CurrencyCode *pvalue, ASN1TagType tagging)
{
   int ll;
   int ll0 = 0;
   int ll1 = 0;

   RTXCTXTPUSHTYPENAME (pctxt, "Iso4217CurrencyCode");

   ll0 = 0;
   switch (pvalue->t)
   {
      case 1:
         RTXCTXTPUSHELEMNAME (pctxt, "numeric");

         if (!((pvalue->u.numeric >= OSUINTCONST(1) && pvalue->u.numeric
             <= OSUINTCONST(999)))) {
            rtxErrAddElemNameParm (pctxt);
            rtxErrAddIntParm (pctxt, (int)pvalue->u.numeric);
            return LOG_RTERR (pctxt, RTERR_CONSVIO);
         }

         ll = xe_uint16 (pctxt, &pvalue->u.numeric, ASN1EXPL);
         if (ll < 0) return LOG_RTERR (pctxt, ll);
         ll1 += ll;

         RTXCTXTPOPELEMNAME (pctxt);
         break;

      case 2:
         RTXCTXTPUSHELEMNAME (pctxt, "alphabetic");

         { OSSIZE nchars = OSCRTLSTRLEN (pvalue->u.alphabetic);
         if (!(nchars == 3)) {
            rtxErrAddElemNameParm (pctxt);
            rtxErrAddIntParm (pctxt, (int)nchars);
            return LOG_RTERR (pctxt, RTERR_CONSVIO);
         }

         }

         ll = xe_charstr (pctxt, pvalue->u.alphabetic, ASN1EXPL, TM_UNIV|TM_PRIM|19);
         if (ll < 0) return LOG_RTERR (pctxt, ll);
         ll1 += ll;

         RTXCTXTPOPELEMNAME (pctxt);
         break;

      default:
         rtxErrAddIntParm (pctxt, pvalue->t);
         return LOG_RTERR (pctxt, RTERR_INVOPT);
   }
   ll0 += ll1;

   RTXCTXTPOPTYPENAME (pctxt);

   return (ll0);
}

EXTERN int asn1E_ETSIQC_MonetaryValue (OSCTXT* pctxt,
   ASN1T_ETSIQC_MonetaryValue *pvalue, ASN1TagType tagging)
{
   int ll;
   int ll0 = 0;
   int ll1 = 0;

   RTXCTXTPUSHTYPENAME (pctxt, "MonetaryValue");

   /* encode exponent */

   RTXCTXTPUSHELEMNAME (pctxt, "exponent");

   ll = xe_integer (pctxt, &pvalue->exponent, ASN1EXPL);
   if (ll < 0) return LOG_RTERR (pctxt, ll);
   ll1 += ll;

   RTXCTXTPOPELEMNAME (pctxt);

   /* encode amount */

   RTXCTXTPUSHELEMNAME (pctxt, "amount");

   ll = xe_integer (pctxt, &pvalue->amount, ASN1EXPL);
   if (ll < 0) return LOG_RTERR (pctxt, ll);
   ll1 += ll;

   RTXCTXTPOPELEMNAME (pctxt);

   /* encode currency */

   RTXCTXTPUSHELEMNAME (pctxt, "currency");

   ll = asn1E_ETSIQC_Iso4217CurrencyCode (pctxt, &pvalue->currency, ASN1EXPL);
   if (ll < 0) return LOG_RTERR (pctxt, ll);
   ll1 += ll;

   RTXCTXTPOPELEMNAME (pctxt);

   ll0 += ll1;

   if (tagging == ASN1EXPL)
      ll0 = xe_tag_len (pctxt, TM_UNIV|TM_CONS|16, ll0);

   RTXCTXTPOPTYPENAME (pctxt);

   return (ll0);
}

EXTERN int asn1E_ETSIQC_QcEuLimitValue (OSCTXT* pctxt,
   ASN1T_ETSIQC_QcEuLimitValue *pvalue, ASN1TagType tagging)
{
   int ll;
   int ll0 = 0;

   RTXCTXTPUSHTYPENAME (pctxt, "QcEuLimitValue");

   ll = asn1E_ETSIQC_MonetaryValue (pctxt, pvalue, tagging);
   if (ll < 0) return LOG_RTERR (pctxt, ll);
   ll0 += ll;

   RTXCTXTPOPTYPENAME (pctxt);

   return (ll0);
}

