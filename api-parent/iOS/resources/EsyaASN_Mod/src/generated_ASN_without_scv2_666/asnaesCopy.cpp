/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.6, Date: 20-Feb-2014.
 */
#include <new>
#include "asnaes.h"
#include "rtsrc/rtCopy.h"
#include "rtxsrc/rtxCommon.h"

void asn1Copy_AES_AES_IV (OSCTXT* pctxt, ASN1T_AES_AES_IV* pSrcValue, 
   ASN1T_AES_AES_IV* pDstValue)
{
   if (pSrcValue == pDstValue) return;

   pDstValue->numocts = pSrcValue->numocts;
   if (pSrcValue->numocts > 0) {
      OSCRTLMEMCPY (pDstValue->data, pSrcValue->data, pSrcValue->numocts);
   }
}

ASN1C_AES_AES_IV::ASN1C_AES_AES_IV (ASN1C_AES_AES_IV& original) :
   ASN1CType(original), msgData(original.getCopy())
{
}

ASN1T_AES_AES_IV::ASN1T_AES_AES_IV (ASN1C_AES_AES_IV& original)
{
   original.getCopy (this);
}

ASN1T_AES_AES_IV& ASN1C_AES_AES_IV::getCopy (ASN1T_AES_AES_IV* pDstData)
{
   if (&msgData == pDstData) return *pDstData;

   OSCTXT* pctxt = getCtxtPtr();

   if (pDstData == 0) {
      pDstData = rtxMemAllocType (pctxt, ASN1T_AES_AES_IV);
      new (pDstData) ASN1T_AES_AES_IV;
   }

   asn1Copy_AES_AES_IV (pctxt, &msgData, pDstData);

   return *pDstData;
}

ASN1T_AES_AES_IV* ASN1C_AES_AES_IV::newCopy ()
{
   OSCTXT* pctxt = getCtxtPtr();
   ASN1T_AES_AES_IV* pDstData = new ASN1T_AES_AES_IV;

   asn1Copy_AES_AES_IV (pctxt, &msgData, pDstData);

   return pDstData;
}

void asn1Copy_AES_CFBParameters (OSCTXT* pctxt, 
   ASN1T_AES_CFBParameters* pSrcValue, ASN1T_AES_CFBParameters* pDstValue)
{
   if (pSrcValue == pDstValue) return;

   asn1Copy_AES_AES_IV (pctxt, &pSrcValue->aes_IV, &pDstValue->aes_IV);

   pDstValue->numberOfBits = pSrcValue->numberOfBits;

}

ASN1C_AES_CFBParameters::ASN1C_AES_CFBParameters (ASN1C_AES_CFBParameters& original) :
   ASN1CType(original), msgData(original.getCopy())
{
}

ASN1T_AES_CFBParameters::ASN1T_AES_CFBParameters (ASN1C_AES_CFBParameters& original)
{
   original.getCopy (this);
}

ASN1T_AES_CFBParameters& ASN1C_AES_CFBParameters::getCopy (ASN1T_AES_CFBParameters* pDstData)
{
   if (&msgData == pDstData) return *pDstData;

   OSCTXT* pctxt = getCtxtPtr();

   if (pDstData == 0) {
      pDstData = rtxMemAllocType (pctxt, ASN1T_AES_CFBParameters);
      new (pDstData) ASN1T_AES_CFBParameters;
   }

   asn1Copy_AES_CFBParameters (pctxt, &msgData, pDstData);

   pDstData->setContext (mpContext);

   return *pDstData;
}

ASN1T_AES_CFBParameters* ASN1C_AES_CFBParameters::newCopy ()
{
   OSCTXT* pctxt = getCtxtPtr();
   ASN1T_AES_CFBParameters* pDstData = new ASN1T_AES_CFBParameters;

   asn1Copy_AES_CFBParameters (pctxt, &msgData, pDstData);

   pDstData->setContext (mpContext);

   return pDstData;
}

