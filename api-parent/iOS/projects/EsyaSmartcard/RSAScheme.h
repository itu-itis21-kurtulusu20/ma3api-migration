#ifndef RSASCHEME_H
#define RSASCHEME_H

#include "SignatureScheme.h"

#include <QByteArray>
#include <QString>

namespace esya {

    class RSAScheme : public SignatureScheme
    {
    public:
        RSAScheme();
        RSAScheme(QString signingAlg);
        RSAScheme(QString signingAlg, long mechanisms[]);
        QByteArray getSignatureInput(QByteArray toBeSigned);
        QByteArray getPrefixForDigestAlg(QString digestAlg);
    private:
        void init();
        QString mSignatureAlg;
        bool mIsSigning;
    };
    const unsigned char sha1Prefix[] = {0x30,0x21,0x30,0x09,0x06,0x05,0x2B,0x0E,0x03,0x02,0x1A,0x05,0x00,0x04,0x14};
    const unsigned char sha256Prefix[] = {0x30,0x31,0x30,0x0D,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,0x04,0x02,0x01,0x05,0x00,0x04,0x20};
    const unsigned char sha384Prefix[] = {0x30,0x41,0x30,0x0D,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,0x04,0x02,0x02,0x05,0x00,0x04,0x30};
    const unsigned char sha512Prefix[] = {0x30,0x51,0x30,0x0D,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,0x04,0x02,0x03,0x05,0x00,0x04,0x40};

}

#endif // RSASCHEME_H
