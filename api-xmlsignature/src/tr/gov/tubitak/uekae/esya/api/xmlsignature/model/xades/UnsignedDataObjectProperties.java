package tr.gov.tubitak.uekae.esya.api.xmlsignature.model.xades;

import org.w3c.dom.Element;
import tr.gov.tubitak.uekae.esya.api.xmlsignature.Context;
import tr.gov.tubitak.uekae.esya.api.xmlsignature.XMLSignatureException;
import static tr.gov.tubitak.uekae.esya.api.xmlsignature.core.Constants.*;

import java.util.ArrayList;
import java.util.List;

/**
 * <p>This element contains properties that qualify some of the signed data
 * objects. The signature generated by the signer does not cover the content
 * of this element.
 * <p><pre>
 * &lt;xsd:element name="UnsignedDataObjectProperties" type="UnsignedDataObjectPropertiesType" /&gt;
 *
 * &lt;xsd:complexType name="UnsignedDataObjectPropertiesType"&gt;
 *     &lt;xsd:sequence&gt;
 *       &lt;xsd:element name="UnsignedDataObjectProperty" type="AnyType" maxOccurs="unbounded"/&gt;
 *     &lt;/xsd:sequence&gt;
 *     &lt;xsd:attribute name="Id" type="xsd:ID" use="optional"/&gt;
 * &lt;/xsd:complexType&gt;
 * </pre>
 *
 * <p>The optional Id attribute can be used to make a reference to the
 * <code>UnsignedDataObjectProperties</code> element. TS 101 733 [1] does not
 * specify the usage of any unsigned property qualifying the signed data object.
 * The present document, however, incorporates this element for the sake of
 * completeness and to cope with potential future needs for inclusion of such
 * kind of properties. The schema definition leaves open the definition of
 * the contents of this type. .
 *
 * @author ahmety
 * date: Sep 23, 2009
 *
 */
public class UnsignedDataObjectProperties extends XAdESBaseElement
{
    private List<UnsignedDataObjectProperty> mProperties = new ArrayList<UnsignedDataObjectProperty>();

    /**
     * Construct new BaseElement according to context
     * @param aContext where some signature spesific properties reside.
     */
    public UnsignedDataObjectProperties(Context aContext)
    {
        super(aContext);
        addLineBreak();
    }

    /**
     * Construct Any from existing
     * @param aElement xml element
     * @param aContext according to context
     * @throws tr.gov.tubitak.uekae.esya.api.xmlsignature.XMLSignatureException
     *          when structure is invalid or can not be
     *          resolved appropriately
     */
    public UnsignedDataObjectProperties(Element aElement, Context aContext)
            throws XMLSignatureException
    {
        super(aElement, aContext);

        Element[] elements = selectChildren(NS_XADES_1_3_2, TAGX_UNSIGNEDDATAOBJECTPROPERTY);
        for (Element propElm : elements){
            mProperties.add(new UnsignedDataObjectProperty(propElm, mContext));
        }
    }

    public void addProperty(UnsignedDataObjectProperty aUsdop){
        mProperties.add(aUsdop);
        mElement.appendChild(aUsdop.getElement());
        addLineBreak();
    }

    public int getPropertyCount(){
        return mProperties.size();
    }

    public UnsignedDataObjectProperty getProperty(int aIndex){
        return mProperties.get(aIndex);
    }

    @Override
    public String getNamespace()
    {
        return NS_XADES_1_3_2;
    }

    public String getLocalName()
    {
        return TAGX_UNSIGNEDDATAOBJECTPROPERTIES;
    }
}
