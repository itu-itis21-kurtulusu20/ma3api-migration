/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.0.0, Date: 18-Mar-2016.
 */
package tr.gov.tubitak.uekae.esya.asn.signaturepolicies;

import com.objsys.asn1j.runtime.*;

public class CertInfoReq extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      setKey (_signaturepoliciesRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "CertInfoReq";
   }

   // Integer constants for switch-case
   public static final int _NONE = 0;
   public static final int _SIGNERONLY = 1;
   public static final int _FULLPATH = 2;

   // Singleton instances of CertInfoReq
   protected static final CertInfoReq _none = new CertInfoReq(0);
   protected static final CertInfoReq _signerOnly = new CertInfoReq(1);
   protected static final CertInfoReq _fullPath = new CertInfoReq(2);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    */
   protected CertInfoReq (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for none.
    */
   public static CertInfoReq none() {
      return _none;
   }

   /**
    * Singleton accessor method for signerOnly.
    */
   public static CertInfoReq signerOnly() {
      return _signerOnly;
   }

   /**
    * Singleton accessor method for fullPath.
    */
   public static CertInfoReq fullPath() {
      return _fullPath;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1BerDecoder{

      public Asn1Type decode(Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength) throws Asn1Exception, java.io.IOException
      {
         return CertInfoReq.valueOf( buffer.decodeEnumValue(explicit, implicitLength) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static CertInfoReq valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return none();
         case 1: return signerOnly();
         case 2: return fullPath();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      if (!(getValue() == 0 ||
            getValue() == 1 ||
            getValue() == 2))
      {
         throw new Asn1InvalidEnumException (getValue());
      }

      int len;
      len = super.encode (buffer, explicit);
      return (len);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("none");
         case 1: return ("signerOnly");
         case 2: return ("fullPath");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.io.PrintWriter _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }

}
