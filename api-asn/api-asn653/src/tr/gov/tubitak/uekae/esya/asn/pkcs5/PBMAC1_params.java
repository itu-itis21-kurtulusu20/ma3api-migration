/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.0.0, Date: 18-Mar-2016.
 */
package tr.gov.tubitak.uekae.esya.api.smartcard.apdu.asn.pkcs5;

import com.objsys.asn1j.runtime.*;

public class PBMAC1_params extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      setKey (_pkcs5Rtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "PBMAC1-params";
   }

   public AlgorithmIdentifier keyDerivationFunc;
   public AlgorithmIdentifier messageAuthScheme;

   public PBMAC1_params () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PBMAC1_params (
      AlgorithmIdentifier keyDerivationFunc_,
      AlgorithmIdentifier messageAuthScheme_
   ) {
      super();
      keyDerivationFunc = keyDerivationFunc_;
      messageAuthScheme = messageAuthScheme_;
   }

   public void init () {
      keyDerivationFunc = null;
      messageAuthScheme = null;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return keyDerivationFunc;
         case 1: return messageAuthScheme;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "keyDerivationFunc";
         case 1: return "messageAuthScheme";
         default: return null;
      }
   }


   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, java.io.IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

      init ();

      // decode SEQUENCE

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      IntHolder elemLen = new IntHolder();

      // decode keyDerivationFunc

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         keyDerivationFunc = new AlgorithmIdentifier();
         keyDerivationFunc.decode (buffer, true, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer, "keyDerivationFunc");

      // decode messageAuthScheme

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         messageAuthScheme = new AlgorithmIdentifier();
         messageAuthScheme.decode (buffer, true, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer, "messageAuthScheme");

      if (!_context.expired()) {
         Asn1Tag _tag = buffer.peekTag ();
         if (_tag.equals (Asn1Tag.UNIV, Asn1Tag.CONS, 16))  {
            throw new Asn1UnexpectedElementException();
         }

      }
      if (explicit && llen == Asn1Status.INDEFLEN) {
         matchTag (buffer, Asn1Tag.EOC);
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode messageAuthScheme

      if (messageAuthScheme != null) {
         len = messageAuthScheme.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("messageAuthScheme");

      // encode keyDerivationFunc

      if (keyDerivationFunc != null) {
         len = keyDerivationFunc.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("keyDerivationFunc");

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
      }

      return (_aal);
   }

   public void print (java.io.PrintWriter _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (keyDerivationFunc != null) keyDerivationFunc.print (_out, "keyDerivationFunc", _level+1);
      if (messageAuthScheme != null) messageAuthScheme.print (_out, "messageAuthScheme", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }

}
