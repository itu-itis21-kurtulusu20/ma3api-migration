/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.0.0, Date: 18-Mar-2016.
 */
package tr.gov.tubitak.uekae.esya.asn.x509;

import com.objsys.asn1j.runtime.*;

public class PolicyMappings_element extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      setKey (_ImplicitRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   public Asn1ObjectIdentifier issuerDomainPolicy;
   public Asn1ObjectIdentifier subjectDomainPolicy;

   public PolicyMappings_element () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public PolicyMappings_element (
      Asn1ObjectIdentifier issuerDomainPolicy_,
      Asn1ObjectIdentifier subjectDomainPolicy_
   ) {
      super();
      issuerDomainPolicy = issuerDomainPolicy_;
      subjectDomainPolicy = subjectDomainPolicy_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public PolicyMappings_element (int[] issuerDomainPolicy_,
      int[] subjectDomainPolicy_
   ) {
      super();
      issuerDomainPolicy = new Asn1ObjectIdentifier (issuerDomainPolicy_);
      subjectDomainPolicy = new Asn1ObjectIdentifier (subjectDomainPolicy_);
   }

   public void init () {
      issuerDomainPolicy = null;
      subjectDomainPolicy = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof PolicyMappings_element) ) return false;

      PolicyMappings_element rhs = (PolicyMappings_element) obj;

      if (issuerDomainPolicy == null) {
         if (rhs.issuerDomainPolicy != null) return false;
      }
      else {
         if (!issuerDomainPolicy.equals(rhs.issuerDomainPolicy)) {
            return false;
         }
      }

      if (subjectDomainPolicy == null) {
         if (rhs.subjectDomainPolicy != null) return false;
      }
      else {
         if (!subjectDomainPolicy.equals(rhs.subjectDomainPolicy)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (issuerDomainPolicy != null) __code = 31*__code + issuerDomainPolicy.hashCode();
      if (subjectDomainPolicy != null) __code = 31*__code + subjectDomainPolicy.hashCode();

      return __code;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return issuerDomainPolicy;
         case 1: return subjectDomainPolicy;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "issuerDomainPolicy";
         case 1: return "subjectDomainPolicy";
         default: return null;
      }
   }


   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, java.io.IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

      init ();

      // decode SEQUENCE

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      IntHolder elemLen = new IntHolder();

      // decode issuerDomainPolicy

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 6, elemLen, false)) {
         issuerDomainPolicy = new Asn1ObjectIdentifier();
         issuerDomainPolicy.decode (buffer, true, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer, "issuerDomainPolicy");

      // decode subjectDomainPolicy

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 6, elemLen, false)) {
         subjectDomainPolicy = new Asn1ObjectIdentifier();
         subjectDomainPolicy.decode (buffer, true, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer, "subjectDomainPolicy");

      if (!_context.expired()) {
         Asn1Tag _tag = buffer.peekTag ();
         if (_tag.equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 6))  {
            throw new Asn1UnexpectedElementException();
         }

      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode subjectDomainPolicy

      if (subjectDomainPolicy != null) {
         len = subjectDomainPolicy.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("subjectDomainPolicy");

      // encode issuerDomainPolicy

      if (issuerDomainPolicy != null) {
         len = issuerDomainPolicy.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("issuerDomainPolicy");

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
      }

      return (_aal);
   }

   public void print (java.io.PrintWriter _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (issuerDomainPolicy != null) issuerDomainPolicy.print (_out, "issuerDomainPolicy", _level+1);
      if (subjectDomainPolicy != null) subjectDomainPolicy.print (_out, "subjectDomainPolicy", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }

}
