/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.0.0, Date: 18-Mar-2016.
 */
package tr.gov.tubitak.uekae.esya.asn.esya;

import com.objsys.asn1j.runtime.*;

public class ESYASertifikaIptalTalep_islemTipi extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      setKey (_esyaRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _ASKIYAAL = 0;
   public static final int _ASKIDANINDIR = 1;
   public static final int _IPTAL = 2;

   // Singleton instances of ESYASertifikaIptalTalep_islemTipi
   protected static final ESYASertifikaIptalTalep_islemTipi _askiyaAl = new ESYASertifikaIptalTalep_islemTipi(0);
   protected static final ESYASertifikaIptalTalep_islemTipi _askidanIndir = new ESYASertifikaIptalTalep_islemTipi(1);
   protected static final ESYASertifikaIptalTalep_islemTipi _iptal = new ESYASertifikaIptalTalep_islemTipi(2);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    */
   protected ESYASertifikaIptalTalep_islemTipi (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for askiyaAl.
    */
   public static ESYASertifikaIptalTalep_islemTipi askiyaAl() {
      return _askiyaAl;
   }

   /**
    * Singleton accessor method for askidanIndir.
    */
   public static ESYASertifikaIptalTalep_islemTipi askidanIndir() {
      return _askidanIndir;
   }

   /**
    * Singleton accessor method for iptal.
    */
   public static ESYASertifikaIptalTalep_islemTipi iptal() {
      return _iptal;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1BerDecoder{

      public Asn1Type decode(Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength) throws Asn1Exception, java.io.IOException
      {
         return ESYASertifikaIptalTalep_islemTipi.valueOf( buffer.decodeEnumValue(explicit, implicitLength) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static ESYASertifikaIptalTalep_islemTipi valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return askiyaAl();
         case 1: return askidanIndir();
         case 2: return iptal();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      if (!(getValue() == 0 ||
            getValue() == 1 ||
            getValue() == 2))
      {
         throw new Asn1InvalidEnumException (getValue());
      }

      int len;
      len = super.encode (buffer, explicit);
      return (len);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("askiyaAl");
         case 1: return ("askidanIndir");
         case 2: return ("iptal");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.io.PrintWriter _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }

}
