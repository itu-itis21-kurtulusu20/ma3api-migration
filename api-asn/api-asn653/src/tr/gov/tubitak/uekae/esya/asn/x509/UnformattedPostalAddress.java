/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.0.0, Date: 18-Mar-2016.
 */
package tr.gov.tubitak.uekae.esya.asn.x509;

import com.objsys.asn1j.runtime.*;

public class UnformattedPostalAddress extends Asn1Set {
   private static final long serialVersionUID = 55;
   static {
      setKey (_ExplicitRtkey._rtkey);
   }

   public String getAsn1TypeName()  {
      return "UnformattedPostalAddress";
   }

   public UnformattedPostalAddress_printable_address printable_address;  // optional
   public Asn1T61String teletex_string;  // optional

   public UnformattedPostalAddress () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UnformattedPostalAddress (
      UnformattedPostalAddress_printable_address printable_address_,
      Asn1T61String teletex_string_
   ) {
      super();
      printable_address = printable_address_;
      teletex_string = teletex_string_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public UnformattedPostalAddress (UnformattedPostalAddress_printable_address printable_address_,
      String teletex_string_
   ) {
      super();
      printable_address = printable_address_;
      teletex_string = new Asn1T61String (teletex_string_);
   }

   public void init () {
      printable_address = null;
      teletex_string = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof UnformattedPostalAddress) ) return false;

      UnformattedPostalAddress rhs = (UnformattedPostalAddress) obj;

      if (printable_address == null) {
         if (rhs.printable_address != null) return false;
      }
      else {
         if (!printable_address.equals(rhs.printable_address)) {
            return false;
         }
      }

      if (teletex_string == null) {
         if (rhs.teletex_string != null) return false;
      }
      else {
         if (!teletex_string.equals(rhs.teletex_string)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (printable_address != null) __code = 31*__code + printable_address.hashCode();
      if (teletex_string != null) __code = 31*__code + teletex_string.hashCode();

      return __code;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return printable_address;
         case 1: return teletex_string;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "printable-address";
         case 1: return "teletex-string";
         default: return null;
      }
   }


   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, java.io.IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SET) : implicitLength;

      init ();

      // decode SET

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      Asn1Tag tag = new Asn1Tag ();

      while (!_context.expired()) {
         buffer.mark (8);

         int len = buffer.decodeTagAndLength (tag);

         // decode printable_address

         if (tag.equals (Asn1Tag.UNIV, Asn1Tag.CONS, 16))
         {
            if (! _context.hasDecoded (tag)) {
               _context.addTag (tag);
               buffer.reset();
               printable_address = new UnformattedPostalAddress_printable_address();
               printable_address.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode teletex_string

         else if (tag.equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 20))
         {
            if (! _context.hasDecoded (tag)) {
               _context.addTag (tag);
               buffer.reset();
               teletex_string = new Asn1T61String();
               teletex_string.decode (buffer, true, len);
               if (!((teletex_string.getLength() >= 1 && teletex_string.getLength()
                   <= 180))) {
                  throw new Asn1ConsVioException ("teletex_string.getLength()", teletex_string.getLength());
               }

            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         else throw new Asn1NotInSetException (buffer, tag);
      }

   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode teletex_string

      if (teletex_string != null) {
         if (!((teletex_string.getLength() >= 1 && teletex_string.getLength() <= 180))) {
            throw new Asn1ConsVioException ("teletex_string.getLength()", teletex_string.getLength());
         }

         len = teletex_string.encode (buffer, true);
         _aal += len;
      }

      // encode printable_address

      if (printable_address != null) {
         len = printable_address.encode (buffer, true);
         _aal += len;
      }

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SET, _aal);
      }

      return (_aal);
   }

   public void print (java.io.PrintWriter _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (printable_address != null) printable_address.print (_out, "printable_address", _level+1);
      if (teletex_string != null) teletex_string.print (_out, "teletex_string", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }

}
