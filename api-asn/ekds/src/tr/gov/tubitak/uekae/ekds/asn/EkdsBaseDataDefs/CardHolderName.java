/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsBaseDataDefs;

import com.objsys.asn1j.runtime.*;
import java.io.*;

public class CardHolderName extends Asn1Type {
   public Asn1UTF8String cardHolderFirstName;
   public Asn1UTF8String cardHolderSurname;

   public CardHolderName () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CardHolderName (
      Asn1UTF8String cardHolderFirstName_,
      Asn1UTF8String cardHolderSurname_
   ) {
      super();
      cardHolderFirstName = cardHolderFirstName_;
      cardHolderSurname = cardHolderSurname_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CardHolderName (String cardHolderFirstName_,
      String cardHolderSurname_
   ) {
      super();
      cardHolderFirstName = new Asn1UTF8String (cardHolderFirstName_);
      cardHolderSurname = new Asn1UTF8String (cardHolderSurname_);
   }

   public void init () {
      cardHolderFirstName = null;
      cardHolderSurname = null;
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

      init ();

      // decode SEQUENCE

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      IntHolder elemLen = new IntHolder();

      // decode cardHolderFirstName

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.PRIM, 0, elemLen, true)) {
         cardHolderFirstName = new Asn1UTF8String();
         cardHolderFirstName.decode (buffer, false, elemLen.value);
         if (!((cardHolderFirstName.getLength() >= 2 && cardHolderFirstName.
            getLength() <= 64))) {
            throw new Asn1ConsVioException ("cardHolderFirstName.getLength()", cardHolderFirstName.getLength());
         }

      }
      else throw new Asn1MissingRequiredException (buffer);

      // decode cardHolderSurname

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.PRIM, 1, elemLen, true)) {
         cardHolderSurname = new Asn1UTF8String();
         cardHolderSurname.decode (buffer, false, elemLen.value);
         if (!((cardHolderSurname.getLength() >= 2 && cardHolderSurname.getLength()
             <= 64))) {
            throw new Asn1ConsVioException ("cardHolderSurname.getLength()", cardHolderSurname.getLength());
         }

      }
      else throw new Asn1MissingRequiredException (buffer);

      if (!_context.expired()) {
         Asn1Tag _tag = buffer.peekTag ();
         if (_tag.equals (Asn1Tag.CTXT, Asn1Tag.PRIM, 0) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.PRIM, 1))
            throw new Asn1SeqOrderException ();

      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode cardHolderSurname

      if (!((cardHolderSurname.getLength() >= 2 && cardHolderSurname.getLength() <= 64
         ))) {
         throw new Asn1ConsVioException ("cardHolderSurname.getLength()", cardHolderSurname.getLength());
      }

      len = cardHolderSurname.encode (buffer, false);
      len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 1, len);
      _aal += len;

      // encode cardHolderFirstName

      if (!((cardHolderFirstName.getLength() >= 2 && cardHolderFirstName.getLength()
          <= 64))) {
         throw new Asn1ConsVioException ("cardHolderFirstName.getLength()", cardHolderFirstName.getLength());
      }

      len = cardHolderFirstName.encode (buffer, false);
      len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 0, len);
      _aal += len;

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
      }

      return (_aal);
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (cardHolderFirstName != null) cardHolderFirstName.print (_out, "cardHolderFirstName", _level+1);
      if (cardHolderSurname != null) cardHolderSurname.print (_out, "cardHolderSurname", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }
}
