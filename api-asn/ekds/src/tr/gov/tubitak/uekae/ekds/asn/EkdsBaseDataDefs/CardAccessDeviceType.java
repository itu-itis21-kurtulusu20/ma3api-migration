/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsBaseDataDefs;

import com.objsys.asn1j.runtime.*;
import java.io.*;

public class CardAccessDeviceType extends Asn1Enumerated {
   // Integer constants for switch-case
   public static final int _PERSONEL = 0;
   public static final int _MOBILE = 1;
   public static final int _INSTITUTIONAL = 2;
   public static final int _EMERGENCY = 3;
   public static final int _KIOSK = 4;
   public static final int _TURNSTILE = 5;
   public static final int _CARDISSUANCE = 6;

   // Singleton instances of CardAccessDeviceType
   protected static CardAccessDeviceType _personel = null;
   protected static CardAccessDeviceType _mobile = null;
   protected static CardAccessDeviceType _institutional = null;
   protected static CardAccessDeviceType _emergency = null;
   protected static CardAccessDeviceType _kiosk = null;
   protected static CardAccessDeviceType _turnstile = null;
   protected static CardAccessDeviceType _cardIssuance = null;

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    */
   protected CardAccessDeviceType (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for personel.
    */
   public static CardAccessDeviceType personel() {
      if (_personel == null) _personel = new CardAccessDeviceType (0);

      return _personel;
   }

   /**
    * Singleton accessor method for mobile.
    */
   public static CardAccessDeviceType mobile() {
      if (_mobile == null) _mobile = new CardAccessDeviceType (1);

      return _mobile;
   }

   /**
    * Singleton accessor method for institutional.
    */
   public static CardAccessDeviceType institutional() {
      if (_institutional == null) _institutional = new CardAccessDeviceType (2);

      return _institutional;
   }

   /**
    * Singleton accessor method for emergency.
    */
   public static CardAccessDeviceType emergency() {
      if (_emergency == null) _emergency = new CardAccessDeviceType (3);

      return _emergency;
   }

   /**
    * Singleton accessor method for kiosk.
    */
   public static CardAccessDeviceType kiosk() {
      if (_kiosk == null) _kiosk = new CardAccessDeviceType (4);

      return _kiosk;
   }

   /**
    * Singleton accessor method for turnstile.
    */
   public static CardAccessDeviceType turnstile() {
      if (_turnstile == null) _turnstile = new CardAccessDeviceType (5);

      return _turnstile;
   }

   /**
    * Singleton accessor method for cardIssuance.
    */
   public static CardAccessDeviceType cardIssuance() {
      if (_cardIssuance == null) _cardIssuance = new CardAccessDeviceType (6);

      return _cardIssuance;
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static CardAccessDeviceType valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return personel();
         case 1: return mobile();
         case 2: return institutional();
         case 3: return emergency();
         case 4: return kiosk();
         case 5: return turnstile();
         case 6: return cardIssuance();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      if (!(value == 0 ||
            value == 1 ||
            value == 2 ||
            value == 3 ||
            value == 4 ||
            value == 5 ||
            value == 6))
      {
         throw new Asn1InvalidEnumException (value);
      }

      int len;
      len = super.encode (buffer, explicit);
      return (len);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("personel");
         case 1: return ("mobile");
         case 2: return ("institutional");
         case 3: return ("emergency");
         case 4: return ("kiosk");
         case 5: return ("turnstile");
         case 6: return ("cardIssuance");
         default: return ("UNDEFINED");
      }
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }
}
