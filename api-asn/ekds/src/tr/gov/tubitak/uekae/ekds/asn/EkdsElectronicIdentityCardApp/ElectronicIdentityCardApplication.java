/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsElectronicIdentityCardApp;

import com.objsys.asn1j.runtime.*;
import java.io.*;
import tr.gov.tubitak.uekae.esya.asn.x509.Certificate;

public class ElectronicIdentityCardApplication extends Asn1Type {
   public CardHolderUniqueIdentifierDataObject cardHolderUID;
   public Certificate cardIssuerCert;
   public FingerPrintDataObject cardHolderFingerprint;
   public VeinPrintDataObject cardHolderVeinPrint;
   public FacialImageDataObject cardHolderFacialImage;
   public PersonalInformationDataObject cardHolderIdentity;
   public CardHolderDataAvailabilityDataObject cardHolderDataAvailability;

   public ElectronicIdentityCardApplication () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ElectronicIdentityCardApplication (
      CardHolderUniqueIdentifierDataObject cardHolderUID_,
      Certificate cardIssuerCert_,
      FingerPrintDataObject cardHolderFingerprint_,
      VeinPrintDataObject cardHolderVeinPrint_,
      FacialImageDataObject cardHolderFacialImage_,
      PersonalInformationDataObject cardHolderIdentity_,
      CardHolderDataAvailabilityDataObject cardHolderDataAvailability_
   ) {
      super();
      cardHolderUID = cardHolderUID_;
      cardIssuerCert = cardIssuerCert_;
      cardHolderFingerprint = cardHolderFingerprint_;
      cardHolderVeinPrint = cardHolderVeinPrint_;
      cardHolderFacialImage = cardHolderFacialImage_;
      cardHolderIdentity = cardHolderIdentity_;
      cardHolderDataAvailability = cardHolderDataAvailability_;
   }

   public void init () {
      cardHolderUID = null;
      cardIssuerCert = null;
      cardHolderFingerprint = null;
      cardHolderVeinPrint = null;
      cardHolderFacialImage = null;
      cardHolderIdentity = null;
      cardHolderDataAvailability = null;
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SET) : implicitLength;

      init ();

      // decode SET

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      Asn1Tag tag = new Asn1Tag ();

      while (!_context.expired()) {
         buffer.mark (8);

         int len = buffer.decodeTagAndLength (tag);

         // decode cardHolderUID

         if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 1))
         {
            if (null == cardHolderUID) {
               buffer.reset();
               cardHolderUID = new CardHolderUniqueIdentifierDataObject();
               cardHolderUID.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode cardIssuerCert

         else if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 2))
         {
            if (null == cardIssuerCert) {
               cardIssuerCert = new Certificate();
               cardIssuerCert.decode (buffer, false, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode cardHolderFingerprint

         else if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 3))
         {
            if (null == cardHolderFingerprint) {
               buffer.reset();
               cardHolderFingerprint = new FingerPrintDataObject();
               cardHolderFingerprint.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode cardHolderVeinPrint

         else if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 4))
         {
            if (null == cardHolderVeinPrint) {
               buffer.reset();
               cardHolderVeinPrint = new VeinPrintDataObject();
               cardHolderVeinPrint.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode cardHolderFacialImage

         else if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 5))
         {
            if (null == cardHolderFacialImage) {
               buffer.reset();
               cardHolderFacialImage = new FacialImageDataObject();
               cardHolderFacialImage.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode cardHolderIdentity

         else if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 6))
         {
            if (null == cardHolderIdentity) {
               buffer.reset();
               cardHolderIdentity = new PersonalInformationDataObject();
               cardHolderIdentity.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode cardHolderDataAvailability

         else if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 11))
         {
            if (null == cardHolderDataAvailability) {
               buffer.reset();
               cardHolderDataAvailability = new CardHolderDataAvailabilityDataObject();
               cardHolderDataAvailability.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         else throw new Asn1NotInSetException (buffer, tag);
      }

      if (null == cardHolderUID ||
          null == cardIssuerCert ||
          null == cardHolderFingerprint ||
          null == cardHolderVeinPrint ||
          null == cardHolderFacialImage ||
          null == cardHolderIdentity ||
          null == cardHolderDataAvailability)
         throw new Asn1MissingRequiredException (buffer);

   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode cardHolderDataAvailability

      len = cardHolderDataAvailability.encode (buffer, true);
      _aal += len;

      // encode cardHolderIdentity

      len = cardHolderIdentity.encode (buffer, true);
      _aal += len;

      // encode cardHolderFacialImage

      len = cardHolderFacialImage.encode (buffer, true);
      _aal += len;

      // encode cardHolderVeinPrint

      len = cardHolderVeinPrint.encode (buffer, true);
      _aal += len;

      // encode cardHolderFingerprint

      len = cardHolderFingerprint.encode (buffer, true);
      _aal += len;

      // encode cardIssuerCert

      len = cardIssuerCert.encode (buffer, false);
      len += buffer.encodeTagAndLength (Asn1Tag.APPL, Asn1Tag.CONS, 2, len);
      _aal += len;

      // encode cardHolderUID

      len = cardHolderUID.encode (buffer, true);
      _aal += len;

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SET, _aal);
      }

      return (_aal);
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (cardHolderUID != null) cardHolderUID.print (_out, "cardHolderUID", _level+1);
      if (cardIssuerCert != null) cardIssuerCert.print (_out, "cardIssuerCert", _level+1);
      if (cardHolderFingerprint != null) cardHolderFingerprint.print (_out, "cardHolderFingerprint", _level+1);
      if (cardHolderVeinPrint != null) cardHolderVeinPrint.print (_out, "cardHolderVeinPrint", _level+1);
      if (cardHolderFacialImage != null) cardHolderFacialImage.print (_out, "cardHolderFacialImage", _level+1);
      if (cardHolderIdentity != null) cardHolderIdentity.print (_out, "cardHolderIdentity", _level+1);
      if (cardHolderDataAvailability != null) cardHolderDataAvailability.print (_out, "cardHolderDataAvailability", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }
}
