/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsRemoteAuthenticationApp;

import com.objsys.asn1j.runtime.*;
import java.io.*;
import tr.gov.tubitak.uekae.ekds.asn.EkdsBaseDataDefs.ServiceProviderApplicationLabel;
import tr.gov.tubitak.uekae.ekds.asn.EkdsBaseDataDefs.ServiceRequestorRole;

public class IdentityVerificationPolicyDescriptor extends Asn1Type {
   public ServiceProviderApplicationLabel applicationLabel;
   public ServiceRequestorRole requestorRole = null;
   public Asn1NumericString cardHolderID;

   public IdentityVerificationPolicyDescriptor () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public IdentityVerificationPolicyDescriptor (
      ServiceProviderApplicationLabel applicationLabel_,
      ServiceRequestorRole requestorRole_,
      Asn1NumericString cardHolderID_
   ) {
      super();
      applicationLabel = applicationLabel_;
      requestorRole = requestorRole_;
      cardHolderID = cardHolderID_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public IdentityVerificationPolicyDescriptor (ServiceProviderApplicationLabel applicationLabel_,
      ServiceRequestorRole requestorRole_,
      String cardHolderID_
   ) {
      super();
      applicationLabel = applicationLabel_;
      requestorRole = requestorRole_;
      cardHolderID = new Asn1NumericString (cardHolderID_);
   }

   public void init () {
      applicationLabel = null;
      requestorRole = null;
      cardHolderID = null;
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

      init ();

      // decode SEQUENCE

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      IntHolder elemLen = new IntHolder();

      // decode applicationLabel

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.CONS, 0, elemLen, true)) {
         applicationLabel = new ServiceProviderApplicationLabel();
         applicationLabel.decode (buffer, false, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer);

      // decode requestorRole

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.PRIM, 1, elemLen, true)) {
         int tval = buffer.decodeEnumValue (ServiceRequestorRole.TAG, false, elemLen.value);
         requestorRole = ServiceRequestorRole.valueOf (tval);
      }
      else throw new Asn1MissingRequiredException (buffer);

      // decode cardHolderID

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.PRIM, 2, elemLen, true)) {
         cardHolderID = new Asn1NumericString();
         cardHolderID.decode (buffer, false, elemLen.value);
         if (!((cardHolderID.getLength() >= 1 && cardHolderID.getLength() <= 12))) {
            throw new Asn1ConsVioException ("cardHolderID.getLength()", cardHolderID.getLength());
         }

      }
      else throw new Asn1MissingRequiredException (buffer);

      if (!_context.expired()) {
         Asn1Tag _tag = buffer.peekTag ();
         if (_tag.equals (Asn1Tag.CTXT, Asn1Tag.CONS, 0) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.PRIM, 1) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.PRIM, 2))
            throw new Asn1SeqOrderException ();

      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode cardHolderID

      if (!((cardHolderID.getLength() >= 1 && cardHolderID.getLength() <= 12))) {
         throw new Asn1ConsVioException ("cardHolderID.getLength()", cardHolderID.getLength());
      }

      len = cardHolderID.encode (buffer, false);
      len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 2, len);
      _aal += len;

      // encode requestorRole

      len = requestorRole.encode (buffer, false);
      len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 1, len);
      _aal += len;

      // encode applicationLabel

      len = applicationLabel.encode (buffer, false);
      len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.CONS, 0, len);
      _aal += len;

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
      }

      return (_aal);
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (applicationLabel != null) applicationLabel.print (_out, "applicationLabel", _level+1);
      if (requestorRole != null) requestorRole.print (_out, "requestorRole", _level+1);
      if (cardHolderID != null) cardHolderID.print (_out, "cardHolderID", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }
}
