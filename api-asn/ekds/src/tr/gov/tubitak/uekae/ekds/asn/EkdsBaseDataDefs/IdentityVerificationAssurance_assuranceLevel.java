/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsBaseDataDefs;

import com.objsys.asn1j.runtime.*;
import java.io.*;

public class IdentityVerificationAssurance_assuranceLevel extends Asn1Enumerated {
   public final static Asn1Tag TAG =
      new Asn1Tag (Asn1Tag.CTXT, Asn1Tag.PRIM, 1);

   // Integer constants for switch-case
   public static final int _LEVEL_0 = 0;
   public static final int _LEVEL_1 = 1;
   public static final int _LEVEL_2 = 2;
   public static final int _LEVEL_3 = 3;
   public static final int _LEVEL_4 = 4;
   public static final int _LEVEL_5 = 5;
   public static final int _LEVEL_13 = 13;
   public static final int _LEVEL_14 = 14;
   public static final int _LEVEL_15 = 15;

   // Singleton instances of IdentityVerificationAssurance_assuranceLevel
   protected static IdentityVerificationAssurance_assuranceLevel _level_0 = null;
   protected static IdentityVerificationAssurance_assuranceLevel _level_1 = null;
   protected static IdentityVerificationAssurance_assuranceLevel _level_2 = null;
   protected static IdentityVerificationAssurance_assuranceLevel _level_3 = null;
   protected static IdentityVerificationAssurance_assuranceLevel _level_4 = null;
   protected static IdentityVerificationAssurance_assuranceLevel _level_5 = null;
   protected static IdentityVerificationAssurance_assuranceLevel _level_13 = null;
   protected static IdentityVerificationAssurance_assuranceLevel _level_14 = null;
   protected static IdentityVerificationAssurance_assuranceLevel _level_15 = null;

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   13
    *   14
    *   15
    */
   protected IdentityVerificationAssurance_assuranceLevel (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for level_0.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_0() {
      if (_level_0 == null) _level_0 = new IdentityVerificationAssurance_assuranceLevel (0);

      return _level_0;
   }

   /**
    * Singleton accessor method for level_1.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_1() {
      if (_level_1 == null) _level_1 = new IdentityVerificationAssurance_assuranceLevel (1);

      return _level_1;
   }

   /**
    * Singleton accessor method for level_2.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_2() {
      if (_level_2 == null) _level_2 = new IdentityVerificationAssurance_assuranceLevel (2);

      return _level_2;
   }

   /**
    * Singleton accessor method for level_3.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_3() {
      if (_level_3 == null) _level_3 = new IdentityVerificationAssurance_assuranceLevel (3);

      return _level_3;
   }

   /**
    * Singleton accessor method for level_4.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_4() {
      if (_level_4 == null) _level_4 = new IdentityVerificationAssurance_assuranceLevel (4);

      return _level_4;
   }

   /**
    * Singleton accessor method for level_5.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_5() {
      if (_level_5 == null) _level_5 = new IdentityVerificationAssurance_assuranceLevel (5);

      return _level_5;
   }

   /**
    * Singleton accessor method for level_13.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_13() {
      if (_level_13 == null) _level_13 = new IdentityVerificationAssurance_assuranceLevel (13);

      return _level_13;
   }

   /**
    * Singleton accessor method for level_14.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_14() {
      if (_level_14 == null) _level_14 = new IdentityVerificationAssurance_assuranceLevel (14);

      return _level_14;
   }

   /**
    * Singleton accessor method for level_15.
    */
   public static IdentityVerificationAssurance_assuranceLevel level_15() {
      if (_level_15 == null) _level_15 = new IdentityVerificationAssurance_assuranceLevel (15);

      return _level_15;
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static IdentityVerificationAssurance_assuranceLevel valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return level_0();
         case 1: return level_1();
         case 2: return level_2();
         case 3: return level_3();
         case 4: return level_4();
         case 5: return level_5();
         case 13: return level_13();
         case 14: return level_14();
         case 15: return level_15();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, IOException
   {
      int llen = matchTag (buffer, Asn1Tag.CTXT, Asn1Tag.PRIM, 1);

      super.decode (buffer, false, llen);

      if (!(value == 0 ||
            value == 1 ||
            value == 2 ||
            value == 3 ||
            value == 4 ||
            value == 5 ||
            value == 13 ||
            value == 14 ||
            value == 15))
      {
         throw new Asn1InvalidEnumException (value);
      }

   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      if (!(value == 0 ||
            value == 1 ||
            value == 2 ||
            value == 3 ||
            value == 4 ||
            value == 5 ||
            value == 13 ||
            value == 14 ||
            value == 15))
      {
         throw new Asn1InvalidEnumException (value);
      }

      int len;
      len = super.encode (buffer, false);
      len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 1, len);
      return (len);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("level_0");
         case 1: return ("level_1");
         case 2: return ("level_2");
         case 3: return ("level_3");
         case 4: return ("level_4");
         case 5: return ("level_5");
         case 13: return ("level_13");
         case 14: return ("level_14");
         case 15: return ("level_15");
         default: return ("UNDEFINED");
      }
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }
}
