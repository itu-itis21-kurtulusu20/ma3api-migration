/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsRemoteAuthenticationApp;

import com.objsys.asn1j.runtime.*;
import java.io.*;

public class RemoteAuthenticationApplication extends Asn1Type {
   public IdentityIdentificationDataObject ivIdentification;
   public IdentityVerificationPolicyDataObject ivPolicy;
   public IdentityVerificationAssertionDataObject ivAssertion;

   public RemoteAuthenticationApplication () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RemoteAuthenticationApplication (
      IdentityIdentificationDataObject ivIdentification_,
      IdentityVerificationPolicyDataObject ivPolicy_,
      IdentityVerificationAssertionDataObject ivAssertion_
   ) {
      super();
      ivIdentification = ivIdentification_;
      ivPolicy = ivPolicy_;
      ivAssertion = ivAssertion_;
   }

   public void init () {
      ivIdentification = null;
      ivPolicy = null;
      ivAssertion = null;
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SET) : implicitLength;

      init ();

      // decode SET

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      Asn1Tag tag = new Asn1Tag ();

      while (!_context.expired()) {
         buffer.mark (8);

         int len = buffer.decodeTagAndLength (tag);

         // decode ivIdentification

         if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 7))
         {
            if (null == ivIdentification) {
               buffer.reset();
               ivIdentification = new IdentityIdentificationDataObject();
               ivIdentification.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode ivPolicy

         else if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 8))
         {
            if (null == ivPolicy) {
               buffer.reset();
               ivPolicy = new IdentityVerificationPolicyDataObject();
               ivPolicy.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         // decode ivAssertion

         else if (tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 9))
         {
            if (null == ivAssertion) {
               buffer.reset();
               ivAssertion = new IdentityVerificationAssertionDataObject();
               ivAssertion.decode (buffer, true, len);
            }
            else throw new Asn1SetDuplicateException (buffer, tag);
         }
         else throw new Asn1NotInSetException (buffer, tag);
      }

      if (null == ivIdentification ||
          null == ivPolicy ||
          null == ivAssertion)
         throw new Asn1MissingRequiredException (buffer);

   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode ivAssertion

      len = ivAssertion.encode (buffer, true);
      _aal += len;

      // encode ivPolicy

      len = ivPolicy.encode (buffer, true);
      _aal += len;

      // encode ivIdentification

      len = ivIdentification.encode (buffer, true);
      _aal += len;

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SET, _aal);
      }

      return (_aal);
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (ivIdentification != null) ivIdentification.print (_out, "ivIdentification", _level+1);
      if (ivPolicy != null) ivPolicy.print (_out, "ivPolicy", _level+1);
      if (ivAssertion != null) ivAssertion.print (_out, "ivAssertion", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }
}
