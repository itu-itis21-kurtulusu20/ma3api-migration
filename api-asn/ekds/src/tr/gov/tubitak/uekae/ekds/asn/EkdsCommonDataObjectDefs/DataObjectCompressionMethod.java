/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsCommonDataObjectDefs;

import com.objsys.asn1j.runtime.*;
import java.io.*;

public class DataObjectCompressionMethod extends Asn1Enumerated {
   // Integer constants for switch-case
   public static final int _NONE = 0;
   public static final int _LZS = 1;

   // Singleton instances of DataObjectCompressionMethod
   protected static DataObjectCompressionMethod _none = null;
   protected static DataObjectCompressionMethod _lzs = null;
   private static DataObjectCompressionMethod __undefined = new DataObjectCompressionMethod(-999);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    */
   protected DataObjectCompressionMethod (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for none.
    */
   public static DataObjectCompressionMethod none() {
      if (_none == null) _none = new DataObjectCompressionMethod (0);

      return _none;
   }

   /**
    * Singleton accessor method for lzs.
    */
   public static DataObjectCompressionMethod lzs() {
      if (_lzs == null) _lzs = new DataObjectCompressionMethod (1);

      return _lzs;
   }

   /** Undefined value. */
   protected static DataObjectCompressionMethod __undefined_() { return __undefined; }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static DataObjectCompressionMethod valueOf (int _value)
   {
      switch ((int)_value) {
         case 0: return none();
         case 1: return lzs();
         default: return __undefined_();
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int len;
      len = super.encode (buffer, explicit);
      return (len);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("none");
         case 1: return ("lzs");
         default: return ("UNDEFINED");
      }
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }
}
