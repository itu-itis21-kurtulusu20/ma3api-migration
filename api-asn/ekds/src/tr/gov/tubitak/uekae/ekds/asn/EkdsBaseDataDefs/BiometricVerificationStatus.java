/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsBaseDataDefs;

import com.objsys.asn1j.runtime.*;
import java.io.*;

public class BiometricVerificationStatus extends Asn1Enumerated {
   // Integer constants for switch-case
   public static final int _SUCCESS = 0;
   public static final int _FAILEDBUTCONFIRMED = 1;
   public static final int _NOTAPPLICABLE = 2;

   // Singleton instances of BiometricVerificationStatus
   protected static BiometricVerificationStatus _success = null;
   protected static BiometricVerificationStatus _failedButConfirmed = null;
   protected static BiometricVerificationStatus _notApplicable = null;

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    */
   protected BiometricVerificationStatus (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for success.
    */
   public static BiometricVerificationStatus success() {
      if (_success == null) _success = new BiometricVerificationStatus (0);

      return _success;
   }

   /**
    * Singleton accessor method for failedButConfirmed.
    */
   public static BiometricVerificationStatus failedButConfirmed() {
      if (_failedButConfirmed == null) _failedButConfirmed = new BiometricVerificationStatus (1);

      return _failedButConfirmed;
   }

   /**
    * Singleton accessor method for notApplicable.
    */
   public static BiometricVerificationStatus notApplicable() {
      if (_notApplicable == null) _notApplicable = new BiometricVerificationStatus (2);

      return _notApplicable;
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static BiometricVerificationStatus valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return success();
         case 1: return failedButConfirmed();
         case 2: return notApplicable();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      if (!(value == 0 ||
            value == 1 ||
            value == 2))
      {
         throw new Asn1InvalidEnumException (value);
      }

      int len;
      len = super.encode (buffer, explicit);
      return (len);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("success");
         case 1: return ("failedButConfirmed");
         case 2: return ("notApplicable");
         default: return ("UNDEFINED");
      }
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }
}
