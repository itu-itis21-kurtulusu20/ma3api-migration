/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.2.5-pre5, Date: 24-Mar-2011.
 */
package tr.gov.tubitak.uekae.ekds.asn.EkdsBaseDataDefs;

import com.objsys.asn1j.runtime.*;
import java.io.*;

public class ServiceRequestorRole extends Asn1Enumerated {
   // Integer constants for switch-case
   public static final int _ROLECLIENT = 0;
   public static final int _ROLEPARTICIPANT = 1;

   // Singleton instances of ServiceRequestorRole
   protected static ServiceRequestorRole _roleClient = null;
   protected static ServiceRequestorRole _roleParticipant = null;

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    */
   protected ServiceRequestorRole (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for roleClient.
    */
   public static ServiceRequestorRole roleClient() {
      if (_roleClient == null) _roleClient = new ServiceRequestorRole (0);

      return _roleClient;
   }

   /**
    * Singleton accessor method for roleParticipant.
    */
   public static ServiceRequestorRole roleParticipant() {
      if (_roleParticipant == null) _roleParticipant = new ServiceRequestorRole (1);

      return _roleParticipant;
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static ServiceRequestorRole valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return roleClient();
         case 1: return roleParticipant();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      if (!(value == 0 ||
            value == 1))
      {
         throw new Asn1InvalidEnumException (value);
      }

      int len;
      len = super.encode (buffer, explicit);
      return (len);
   }

   public String toString () {
      switch ((int)value) {
         case 0: return ("roleClient");
         case 1: return ("roleParticipant");
         default: return ("UNDEFINED");
      }
   }

   public void print (PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }
}
