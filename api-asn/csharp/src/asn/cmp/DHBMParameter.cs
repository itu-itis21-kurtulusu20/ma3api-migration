// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.6.4, Date: 10-Oct-2013.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace tr.gov.tubitak.uekae.esya.asn.cmp {

   using AlgorithmIdentifier = tr.gov.tubitak.uekae.esya.asn.x509.AlgorithmIdentifier;

   public class DHBMParameter : Asn1Type {
      public tr.gov.tubitak.uekae.esya.asn.x509.AlgorithmIdentifier owf;
      public tr.gov.tubitak.uekae.esya.asn.x509.AlgorithmIdentifier mac;

      static DHBMParameter ()
      {
         Asn1Type.SetKey2 (_cmpValues._rtkey);
      }

      public DHBMParameter () : base()
      {
         Init();
      }

      /// <summary>
      /// This constructor sets all elements to references to the 
      /// given objects
      /// </summary>
      public DHBMParameter (
         tr.gov.tubitak.uekae.esya.asn.x509.AlgorithmIdentifier owf_,
         tr.gov.tubitak.uekae.esya.asn.x509.AlgorithmIdentifier mac_
      )
         : base ()
      {
         owf = owf_;
         mac = mac_;
      }

      public void Init () {
         owf = null;
         mac = null;
      }

      public override void Decode
         (Asn1BerDecodeBuffer buffer, bool explicitTagging, int implicitLength)
      {
         int llen = (explicitTagging) ?
            MatchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

         Init ();

         // decode SEQUENCE

         Asn1BerDecodeContext _context =
            new Asn1BerDecodeContext (buffer, llen);

         IntHolder elemLen = new IntHolder();

         // decode owf

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
            owf = new AlgorithmIdentifier();
            owf.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode mac

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
            mac = new AlgorithmIdentifier();
            mac.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

      }

      public override int Encode (Asn1BerEncodeBuffer buffer, bool explicitTagging)
      {
         int _aal = 0, len;

         // encode mac

         len = mac.Encode (buffer, true);
         _aal += len;

         // encode owf

         len = owf.Encode (buffer, true);
         _aal += len;

         if (explicitTagging) {
            _aal += buffer.EncodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
         }

         return (_aal);
      }

      public override void Print (System.IO.TextWriter _out, 
                                  string _varName, int _level)
      {
         Indent (_out, _level);
         _out.WriteLine (_varName + " {");
         if (owf != null) owf.Print (_out, "owf", _level+1);
         if (mac != null) mac.Print (_out, "mac", _level+1);
         Indent (_out, _level);
         _out.WriteLine ("}");
      }
   }
}
