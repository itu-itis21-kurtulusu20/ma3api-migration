// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.6.4, Date: 10-Oct-2013.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace tr.gov.tubitak.uekae.esya.asn.ocsp {

   public class ResponseBytes : Asn1Type {
      public Asn1ObjectIdentifier responseType;
      public Asn1OctetString response;

      static ResponseBytes ()
      {
         Asn1Type.SetKey2 (_ocspValues._rtkey);
      }

      public ResponseBytes () : base()
      {
         Init();
      }

      /// <summary>
      /// This constructor sets all elements to references to the 
      /// given objects
      /// </summary>
      public ResponseBytes (
         Asn1ObjectIdentifier responseType_,
         Asn1OctetString response_
      )
         : base ()
      {
         responseType = responseType_;
         response = response_;
      }

      /// <summary>
      /// This constructor allows primitive data to be passed for all 
      /// primitive elements.  It will create new object wrappers for 
      /// the primitive data and set other elements to references to 
      /// the given objects 
      /// </summary>
      public ResponseBytes (int[] responseType_,
         byte[] response_
      )
         : base ()
      {
         responseType = new Asn1ObjectIdentifier (responseType_);
         response = new Asn1OctetString (response_);
      }

      public void Init () {
         responseType = null;
         response = null;
      }

      public override void Decode
         (Asn1BerDecodeBuffer buffer, bool explicitTagging, int implicitLength)
      {
         int llen = (explicitTagging) ?
            MatchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

         Init ();

         // decode SEQUENCE

         Asn1BerDecodeContext _context =
            new Asn1BerDecodeContext (buffer, llen);

         IntHolder elemLen = new IntHolder();

         // decode responseType

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 6, elemLen, false)) {
            responseType = new Asn1ObjectIdentifier();
            responseType.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode response

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 4, elemLen, false)) {
            response = new Asn1OctetString();
            response.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

      }

      public override int Encode (Asn1BerEncodeBuffer buffer, bool explicitTagging)
      {
         int _aal = 0, len;

         // encode response

         len = response.Encode (buffer, true);
         _aal += len;

         // encode responseType

         len = responseType.Encode (buffer, true);
         _aal += len;

         if (explicitTagging) {
            _aal += buffer.EncodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
         }

         return (_aal);
      }

      public override void Print (System.IO.TextWriter _out, 
                                  string _varName, int _level)
      {
         Indent (_out, _level);
         _out.WriteLine (_varName + " {");
         if (responseType != null) responseType.Print (_out, "responseType", _level+1);
         if (response != null) response.Print (_out, "response", _level+1);
         Indent (_out, _level);
         _out.WriteLine ("}");
      }
   }
}
