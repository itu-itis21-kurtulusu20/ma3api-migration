// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.6.4, Date: 10-Oct-2013.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace tr.gov.tubitak.uekae.esya.asn.x509 {

   public class PDSParameter : Asn1Type {
      public Asn1PrintableString printable_string;  // optional
      public Asn1T61String teletex_string;  // optional

      static PDSParameter ()
      {
         Asn1Type.SetKey2 (_ExplicitValues._rtkey);
      }

      public PDSParameter () : base()
      {
         Init();
      }

      /// <summary>
      /// This constructor sets all elements to references to the 
      /// given objects
      /// </summary>
      public PDSParameter (
         Asn1PrintableString printable_string_,
         Asn1T61String teletex_string_
      )
         : base ()
      {
         printable_string = printable_string_;
         teletex_string = teletex_string_;
      }

      /// <summary>
      /// This constructor allows primitive data to be passed for all 
      /// primitive elements.  It will create new object wrappers for 
      /// the primitive data and set other elements to references to 
      /// the given objects 
      /// </summary>
      public PDSParameter (string printable_string_,
         string teletex_string_
      )
         : base ()
      {
         printable_string = new Asn1PrintableString (printable_string_);
         teletex_string = new Asn1T61String (teletex_string_);
      }

      public void Init () {
         printable_string = null;
         teletex_string = null;
      }

      public override bool Equals( Object obj ) {
         if ( this == obj ) return true;
         if ( !(obj is PDSParameter) ) return false;

         PDSParameter rhs = (PDSParameter) obj;

         if (printable_string == null) {
            if (rhs.printable_string != null) return false;
         }
         else {
            if (!printable_string.Equals(rhs.printable_string)) {
               return false;
            }
         }

         if (teletex_string == null) {
            if (rhs.teletex_string != null) return false;
         }
         else {
            if (!teletex_string.Equals(rhs.teletex_string)) {
               return false;
            }
         }

         return true;
      }

      public override int GetHashCode() {
         int __code = 1;

         if (printable_string != null) __code = 31*__code + printable_string.GetHashCode();
         if (teletex_string != null) __code = 31*__code + teletex_string.GetHashCode();

         return __code;
      }

      public override void Decode
         (Asn1BerDecodeBuffer buffer, bool explicitTagging, int implicitLength)
      {
         int llen = (explicitTagging) ?
            MatchTag (buffer, Asn1Tag.SET) : implicitLength;

         Init ();

         // decode SET

         Asn1BerDecodeContext _context =
            new Asn1BerDecodeContext (buffer, llen);

         Asn1Tag tag = new Asn1Tag ();

         while (!_context.Expired()) {
            buffer.Mark ();

            int len = buffer.DecodeTagAndLength (tag);

            // decode printable_string

            if (tag.Equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 19))
            {
               if (null == printable_string) {
                  buffer.Reset();
                  printable_string = new Asn1PrintableString();
                  printable_string.Decode (buffer, true, len);
                  if (!((printable_string.Length >= 1 && printable_string.Length <= 30))) {
                     throw new Asn1ConsVioException ("printable_string.Length", printable_string.Length);
                  }

               }
               else throw new Asn1SetDuplicateException (buffer, tag);
            }

            // decode teletex_string

            else if (tag.Equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 20))
            {
               if (null == teletex_string) {
                  buffer.Reset();
                  teletex_string = new Asn1T61String();
                  teletex_string.Decode (buffer, true, len);
                  if (!((teletex_string.Length >= 1 && teletex_string.Length <= 30))) {
                     throw new Asn1ConsVioException ("teletex_string.Length", teletex_string.Length);
                  }

               }
               else throw new Asn1SetDuplicateException (buffer, tag);
            }
            else throw new Asn1NotInSetException (buffer, tag);
         }

      }

      public override int Encode (Asn1BerEncodeBuffer buffer, bool explicitTagging)
      {
         int _aal = 0, len;

         // encode teletex_string

         if (teletex_string != null) {
            if (!((teletex_string.Length >= 1 && teletex_string.Length <= 30))) {
               throw new Asn1ConsVioException ("teletex_string.Length", teletex_string.Length);
            }

            len = teletex_string.Encode (buffer, true);
            _aal += len;
         }

         // encode printable_string

         if (printable_string != null) {
            if (!((printable_string.Length >= 1 && printable_string.Length <= 30))) {
               throw new Asn1ConsVioException ("printable_string.Length", printable_string.Length);
            }

            len = printable_string.Encode (buffer, true);
            _aal += len;
         }

         if (explicitTagging) {
            _aal += buffer.EncodeTagAndLength (Asn1Tag.SET, _aal);
         }

         return (_aal);
      }

      public override void Print (System.IO.TextWriter _out, 
                                  string _varName, int _level)
      {
         Indent (_out, _level);
         _out.WriteLine (_varName + " {");
         if (printable_string != null) printable_string.Print (_out, "printable_string", _level+1);
         if (teletex_string != null) teletex_string.Print (_out, "teletex_string", _level+1);
         Indent (_out, _level);
         _out.WriteLine ("}");
      }
   }
}
