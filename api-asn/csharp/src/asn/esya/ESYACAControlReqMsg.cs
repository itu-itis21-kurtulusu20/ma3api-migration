// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.6.4, Date: 10-Oct-2013.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace tr.gov.tubitak.uekae.esya.asn.esya {

   public class ESYACAControlReqMsg : Asn1Type {
      public ESYACAControlReqMsg_islemtipi islemtipi;
      public ESYAParametreleri params_;  // optional

      static ESYACAControlReqMsg ()
      {
         Asn1Type.SetKey2 (_esyaValues._rtkey);
      }

      public ESYACAControlReqMsg () : base()
      {
         Init();
      }

      /// <summary>
      /// This constructor sets all elements to references to the 
      /// given objects
      /// </summary>
      public ESYACAControlReqMsg (
         ESYACAControlReqMsg_islemtipi islemtipi_,
         ESYAParametreleri params__
      )
         : base ()
      {
         islemtipi = islemtipi_;
         params_ = params__;
      }

      /// <summary>
      /// This constructor is for required elements only.  It sets 
      /// all elements to references to the given objects
      /// </summary>
      public ESYACAControlReqMsg (
         ESYACAControlReqMsg_islemtipi islemtipi_
      )
         : base ()
      {
         islemtipi = islemtipi_;
      }

      public void Init () {
         islemtipi = null;
         params_ = null;
      }

      public override void Decode
         (Asn1BerDecodeBuffer buffer, bool explicitTagging, int implicitLength)
      {
         int llen = (explicitTagging) ?
            MatchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

         Init ();

         // decode SEQUENCE

         Asn1BerDecodeContext _context =
            new Asn1BerDecodeContext (buffer, llen);

         IntHolder elemLen = new IntHolder();

         // decode islemtipi

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 10, elemLen, false)) {
            int tval = buffer.DecodeEnumValue (ESYACAControlReqMsg_islemtipi._TAG, true, elemLen.mValue);
            islemtipi = ESYACAControlReqMsg_islemtipi.ValueOf (tval);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode params_

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
            params_ = new ESYAParametreleri();
            params_.Decode (buffer, true, elemLen.mValue);
         }

      }

      public override int Encode (Asn1BerEncodeBuffer buffer, bool explicitTagging)
      {
         int _aal = 0, len;

         // encode params_

         if (params_ != null) {
            len = params_.Encode (buffer, true);
            _aal += len;
         }

         // encode islemtipi

         len = islemtipi.Encode (buffer, true);
         _aal += len;

         if (explicitTagging) {
            _aal += buffer.EncodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
         }

         return (_aal);
      }

      public override void Print (System.IO.TextWriter _out, 
                                  string _varName, int _level)
      {
         Indent (_out, _level);
         _out.WriteLine (_varName + " {");
         if (islemtipi != null) islemtipi.Print (_out, "islemtipi", _level+1);
         if (params_ != null) params_.Print (_out, "params_", _level+1);
         Indent (_out, _level);
         _out.WriteLine ("}");
      }
   }
}
