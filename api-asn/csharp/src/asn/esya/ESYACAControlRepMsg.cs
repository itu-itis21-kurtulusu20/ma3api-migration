// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.6.4, Date: 10-Oct-2013.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace tr.gov.tubitak.uekae.esya.asn.esya {

   public class ESYACAControlRepMsg : Asn1Type {
      public ESYACAControlRepMsg_donuskodu donuskodu;
      public ESYACAControlRepMsg_cevapislemtipi cevapislemtipi;  // optional
      public Asn1UTF8String message;  // optional
      public Asn1UTF8String errorStr;  // optional
      public ESYACAStatus status;  // optional
      public ESYAParametreleri params_;  // optional

      static ESYACAControlRepMsg ()
      {
         Asn1Type.SetKey2 (_esyaValues._rtkey);
      }

      public ESYACAControlRepMsg () : base()
      {
         Init();
      }

      /// <summary>
      /// This constructor sets all elements to references to the 
      /// given objects
      /// </summary>
      public ESYACAControlRepMsg (
         ESYACAControlRepMsg_donuskodu donuskodu_,
         ESYACAControlRepMsg_cevapislemtipi cevapislemtipi_,
         Asn1UTF8String message_,
         Asn1UTF8String errorStr_,
         ESYACAStatus status_,
         ESYAParametreleri params__
      )
         : base ()
      {
         donuskodu = donuskodu_;
         cevapislemtipi = cevapislemtipi_;
         message = message_;
         errorStr = errorStr_;
         status = status_;
         params_ = params__;
      }

      /// <summary>
      /// This constructor is for required elements only.  It sets 
      /// all elements to references to the given objects
      /// </summary>
      public ESYACAControlRepMsg (
         ESYACAControlRepMsg_donuskodu donuskodu_
      )
         : base ()
      {
         donuskodu = donuskodu_;
      }

      /// <summary>
      /// This constructor allows primitive data to be passed for all 
      /// primitive elements.  It will create new object wrappers for 
      /// the primitive data and set other elements to references to 
      /// the given objects 
      /// </summary>
      public ESYACAControlRepMsg (ESYACAControlRepMsg_donuskodu donuskodu_,
         ESYACAControlRepMsg_cevapislemtipi cevapislemtipi_,
         string message_,
         string errorStr_,
         ESYACAStatus status_,
         ESYAParametreleri params__
      )
         : base ()
      {
         donuskodu = donuskodu_;
         cevapislemtipi = cevapislemtipi_;
         message = new Asn1UTF8String (message_);
         errorStr = new Asn1UTF8String (errorStr_);
         status = status_;
         params_ = params__;
      }

      public void Init () {
         donuskodu = null;
         cevapislemtipi = null;
         message = null;
         errorStr = null;
         status = null;
         params_ = null;
      }

      public override void Decode
         (Asn1BerDecodeBuffer buffer, bool explicitTagging, int implicitLength)
      {
         int llen = (explicitTagging) ?
            MatchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

         Init ();

         // decode SEQUENCE

         Asn1BerDecodeContext _context =
            new Asn1BerDecodeContext (buffer, llen);

         IntHolder elemLen = new IntHolder();

         // decode donuskodu

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 10, elemLen, false)) {
            int tval = buffer.DecodeEnumValue (ESYACAControlRepMsg_donuskodu._TAG, true, elemLen.mValue);
            donuskodu = ESYACAControlRepMsg_donuskodu.ValueOf (tval);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode cevapislemtipi

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 10, elemLen, false)) {
            int tval = buffer.DecodeEnumValue (ESYACAControlRepMsg_cevapislemtipi._TAG, true, elemLen.mValue);
            cevapislemtipi = ESYACAControlRepMsg_cevapislemtipi.ValueOf (tval);
         }

         // decode message

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 12, elemLen, false)) {
            message = new Asn1UTF8String();
            message.Decode (buffer, true, elemLen.mValue);
         }

         // decode errorStr

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 12, elemLen, false)) {
            errorStr = new Asn1UTF8String();
            errorStr.Decode (buffer, true, elemLen.mValue);
         }

         // decode status

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
            status = new ESYACAStatus();
            status.Decode (buffer, true, elemLen.mValue);
         }

         // decode params_

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
            params_ = new ESYAParametreleri();
            params_.Decode (buffer, true, elemLen.mValue);
         }

      }

      public override int Encode (Asn1BerEncodeBuffer buffer, bool explicitTagging)
      {
         int _aal = 0, len;

         // encode params_

         if (params_ != null) {
            len = params_.Encode (buffer, true);
            _aal += len;
         }

         // encode status

         if (status != null) {
            len = status.Encode (buffer, true);
            _aal += len;
         }

         // encode errorStr

         if (errorStr != null) {
            len = errorStr.Encode (buffer, true);
            _aal += len;
         }

         // encode message

         if (message != null) {
            len = message.Encode (buffer, true);
            _aal += len;
         }

         // encode cevapislemtipi

         if (cevapislemtipi != null) {
            len = cevapislemtipi.Encode (buffer, true);
            _aal += len;
         }

         // encode donuskodu

         len = donuskodu.Encode (buffer, true);
         _aal += len;

         if (explicitTagging) {
            _aal += buffer.EncodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
         }

         return (_aal);
      }

      public override void Print (System.IO.TextWriter _out, 
                                  string _varName, int _level)
      {
         Indent (_out, _level);
         _out.WriteLine (_varName + " {");
         if (donuskodu != null) donuskodu.Print (_out, "donuskodu", _level+1);
         if (cevapislemtipi != null) cevapislemtipi.Print (_out, "cevapislemtipi", _level+1);
         if (message != null) message.Print (_out, "message", _level+1);
         if (errorStr != null) errorStr.Print (_out, "errorStr", _level+1);
         if (status != null) status.Print (_out, "status", _level+1);
         if (params_ != null) params_.Print (_out, "params_", _level+1);
         Indent (_out, _level);
         _out.WriteLine ("}");
      }
   }
}
