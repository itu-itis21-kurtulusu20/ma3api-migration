// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.6.4, Date: 10-Oct-2013.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace tr.gov.tubitak.uekae.esya.asn.esya {

   public class ESYASertifikaIptalTalep : Asn1Type {
      public ESYASertifikaIptalTalep_kartSeriNo kartSeriNo;
      public Asn1UTF8String kayitciAdi;
      public ESYASertifikaIptalTalep_islemTipi islemTipi;

      static ESYASertifikaIptalTalep ()
      {
         Asn1Type.SetKey2 (_esyaValues._rtkey);
      }

      public ESYASertifikaIptalTalep () : base()
      {
         Init();
      }

      /// <summary>
      /// This constructor sets all elements to references to the 
      /// given objects
      /// </summary>
      public ESYASertifikaIptalTalep (
         ESYASertifikaIptalTalep_kartSeriNo kartSeriNo_,
         Asn1UTF8String kayitciAdi_,
         ESYASertifikaIptalTalep_islemTipi islemTipi_
      )
         : base ()
      {
         kartSeriNo = kartSeriNo_;
         kayitciAdi = kayitciAdi_;
         islemTipi = islemTipi_;
      }

      /// <summary>
      /// This constructor allows primitive data to be passed for all 
      /// primitive elements.  It will create new object wrappers for 
      /// the primitive data and set other elements to references to 
      /// the given objects 
      /// </summary>
      public ESYASertifikaIptalTalep (ESYASertifikaIptalTalep_kartSeriNo kartSeriNo_,
         string kayitciAdi_,
         ESYASertifikaIptalTalep_islemTipi islemTipi_
      )
         : base ()
      {
         kartSeriNo = kartSeriNo_;
         kayitciAdi = new Asn1UTF8String (kayitciAdi_);
         islemTipi = islemTipi_;
      }

      public void Init () {
         kartSeriNo = null;
         kayitciAdi = null;
         islemTipi = null;
      }

      public override void Decode
         (Asn1BerDecodeBuffer buffer, bool explicitTagging, int implicitLength)
      {
         int llen = (explicitTagging) ?
            MatchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

         Init ();

         // decode SEQUENCE

         Asn1BerDecodeContext _context =
            new Asn1BerDecodeContext (buffer, llen);

         IntHolder elemLen = new IntHolder();

         // decode kartSeriNo

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
            kartSeriNo = new ESYASertifikaIptalTalep_kartSeriNo();
            kartSeriNo.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode kayitciAdi

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 12, elemLen, false)) {
            kayitciAdi = new Asn1UTF8String();
            kayitciAdi.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode islemTipi

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 10, elemLen, false)) {
            int tval = buffer.DecodeEnumValue (ESYASertifikaIptalTalep_islemTipi._TAG, true, elemLen.mValue);
            islemTipi = ESYASertifikaIptalTalep_islemTipi.ValueOf (tval);
         }
         else throw new Asn1MissingRequiredException (buffer);

      }

      public override int Encode (Asn1BerEncodeBuffer buffer, bool explicitTagging)
      {
         int _aal = 0, len;

         // encode islemTipi

         len = islemTipi.Encode (buffer, true);
         _aal += len;

         // encode kayitciAdi

         len = kayitciAdi.Encode (buffer, true);
         _aal += len;

         // encode kartSeriNo

         len = kartSeriNo.Encode (buffer, true);
         _aal += len;

         if (explicitTagging) {
            _aal += buffer.EncodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
         }

         return (_aal);
      }

      public override void Print (System.IO.TextWriter _out, 
                                  string _varName, int _level)
      {
         Indent (_out, _level);
         _out.WriteLine (_varName + " {");
         if (kartSeriNo != null) kartSeriNo.Print (_out, "kartSeriNo", _level+1);
         if (kayitciAdi != null) kayitciAdi.Print (_out, "kayitciAdi", _level+1);
         if (islemTipi != null) islemTipi.Print (_out, "islemTipi", _level+1);
         Indent (_out, _level);
         _out.WriteLine ("}");
      }
   }
}
