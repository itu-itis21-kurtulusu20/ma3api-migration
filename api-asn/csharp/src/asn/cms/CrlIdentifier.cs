// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.6.4, Date: 10-Oct-2013.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace tr.gov.tubitak.uekae.esya.asn.cms {

   using Name = tr.gov.tubitak.uekae.esya.asn.x509.Name;

   public class CrlIdentifier : Asn1Type {
      public Name crlissuer;
      public Asn1UTCTime crlIssuedTime;
      public Asn1BigInteger crlNumber;  // optional

      static CrlIdentifier ()
      {
         Asn1Type.SetKey2 (_etsi101733Values._rtkey);
      }

      public CrlIdentifier () : base()
      {
         Init();
      }

      /// <summary>
      /// This constructor sets all elements to references to the 
      /// given objects
      /// </summary>
      public CrlIdentifier (
         Name crlissuer_,
         Asn1UTCTime crlIssuedTime_,
         Asn1BigInteger crlNumber_
      )
         : base ()
      {
         crlissuer = crlissuer_;
         crlIssuedTime = crlIssuedTime_;
         crlNumber = crlNumber_;
      }

      /// <summary>
      /// This constructor is for required elements only.  It sets 
      /// all elements to references to the given objects
      /// </summary>
      public CrlIdentifier (
         Name crlissuer_,
         Asn1UTCTime crlIssuedTime_
      )
         : base ()
      {
         crlissuer = crlissuer_;
         crlIssuedTime = crlIssuedTime_;
      }

      /// <summary>
      /// This constructor allows primitive data to be passed for all 
      /// primitive elements.  It will create new object wrappers for 
      /// the primitive data and set other elements to references to 
      /// the given objects 
      /// </summary>
      public CrlIdentifier (Name crlissuer_,
         string crlIssuedTime_,
         Asn1BigInteger crlNumber_
      )
         : base ()
      {
         crlissuer = crlissuer_;
         crlIssuedTime = new Asn1UTCTime (crlIssuedTime_);
         crlNumber = crlNumber_;
      }

      /// <summary>
      /// This constructor is for required elements only.  It allows 
      /// primitive data to be passed for all primitive elements.  
      /// It will create new object wrappers for the primitive data 
      /// and set other elements to references to the given objects. 
      /// </summary>
      public CrlIdentifier (
         Name crlissuer_,
         string crlIssuedTime_
      )
         : base ()
      {
         crlissuer = crlissuer_;
         crlIssuedTime = new Asn1UTCTime (crlIssuedTime_);
      }

      public void Init () {
         crlissuer = null;
         crlIssuedTime = null;
         crlNumber = null;
      }

      public override void Decode
         (Asn1BerDecodeBuffer buffer, bool explicitTagging, int implicitLength)
      {
         int llen = (explicitTagging) ?
            MatchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

         Init ();

         // decode SEQUENCE

         Asn1BerDecodeContext _context =
            new Asn1BerDecodeContext (buffer, llen);

         IntHolder elemLen = new IntHolder();

         // decode crlissuer

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
            crlissuer = new Name();
            crlissuer.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode crlIssuedTime

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 23, elemLen, false)) {
            crlIssuedTime = new Asn1UTCTime (true);
            crlIssuedTime.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode crlNumber

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 2, elemLen, false)) {
            crlNumber = new Asn1BigInteger();
            crlNumber.Decode (buffer, true, elemLen.mValue);
         }

      }

      public override int Encode (Asn1BerEncodeBuffer buffer, bool explicitTagging)
      {
         int _aal = 0, len;

         // encode crlNumber

         if (crlNumber != null) {
            len = crlNumber.Encode (buffer, true);
            _aal += len;
         }

         // encode crlIssuedTime

         len = crlIssuedTime.Encode (buffer, true);
         _aal += len;

         // encode crlissuer

         len = crlissuer.Encode (buffer, true);
         _aal += len;

         if (explicitTagging) {
            _aal += buffer.EncodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
         }

         return (_aal);
      }

      public override void Print (System.IO.TextWriter _out, 
                                  string _varName, int _level)
      {
         Indent (_out, _level);
         _out.WriteLine (_varName + " {");
         if (crlissuer != null) crlissuer.Print (_out, "crlissuer", _level+1);
         if (crlIssuedTime != null) crlIssuedTime.Print (_out, "crlIssuedTime", _level+1);
         if (crlNumber != null) crlNumber.Print (_out, "crlNumber", _level+1);
         Indent (_out, _level);
         _out.WriteLine ("}");
      }
   }
}
