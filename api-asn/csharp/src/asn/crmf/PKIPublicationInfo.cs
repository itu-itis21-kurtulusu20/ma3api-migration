// 
// This file was generated by the Objective Systems ASN1C Compiler
// (http://www.obj-sys.com).  Version: 6.6.4, Date: 10-Oct-2013.
// 
using System;
using Com.Objsys.Asn1.Runtime;

namespace tr.gov.tubitak.uekae.esya.asn.crmf {

   public class PKIPublicationInfo : Asn1Type {
      public PKIPublicationInfo_action action;
      public PKIPublicationInfo_pubInfos pubInfos;  // optional

      static PKIPublicationInfo ()
      {
         Asn1Type.SetKey2 (_crmfValues._rtkey);
      }

      public PKIPublicationInfo () : base()
      {
         Init();
      }

      /// <summary>
      /// This constructor sets all elements to references to the 
      /// given objects
      /// </summary>
      public PKIPublicationInfo (
         PKIPublicationInfo_action action_,
         PKIPublicationInfo_pubInfos pubInfos_
      )
         : base ()
      {
         action = action_;
         pubInfos = pubInfos_;
      }

      /// <summary>
      /// This constructor is for required elements only.  It sets 
      /// all elements to references to the given objects
      /// </summary>
      public PKIPublicationInfo (
         PKIPublicationInfo_action action_
      )
         : base ()
      {
         action = action_;
      }

      /// <summary>
      /// This constructor allows primitive data to be passed for all 
      /// primitive elements.  It will create new object wrappers for 
      /// the primitive data and set other elements to references to 
      /// the given objects 
      /// </summary>
      public PKIPublicationInfo (long action_,
         PKIPublicationInfo_pubInfos pubInfos_
      )
         : base ()
      {
         action = new PKIPublicationInfo_action (action_);
         pubInfos = pubInfos_;
      }

      /// <summary>
      /// This constructor is for required elements only.  It allows 
      /// primitive data to be passed for all primitive elements.  
      /// It will create new object wrappers for the primitive data 
      /// and set other elements to references to the given objects. 
      /// </summary>
      public PKIPublicationInfo (
         long action_
      )
         : base ()
      {
         action = new PKIPublicationInfo_action (action_);
      }

      public void Init () {
         action = null;
         pubInfos = null;
      }

      public override void Decode
         (Asn1BerDecodeBuffer buffer, bool explicitTagging, int implicitLength)
      {
         int llen = (explicitTagging) ?
            MatchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

         Init ();

         // decode SEQUENCE

         Asn1BerDecodeContext _context =
            new Asn1BerDecodeContext (buffer, llen);

         IntHolder elemLen = new IntHolder();

         // decode action

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 2, elemLen, false)) {
            action = new PKIPublicationInfo_action();
            action.Decode (buffer, true, elemLen.mValue);
         }
         else throw new Asn1MissingRequiredException (buffer);

         // decode pubInfos

         if (_context.MatchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
            pubInfos = new PKIPublicationInfo_pubInfos();
            pubInfos.Decode (buffer, true, elemLen.mValue);
         }

      }

      public override int Encode (Asn1BerEncodeBuffer buffer, bool explicitTagging)
      {
         int _aal = 0, len;

         // encode pubInfos

         if (pubInfos != null) {
            len = pubInfos.Encode (buffer, true);
            _aal += len;
         }

         // encode action

         len = action.Encode (buffer, true);
         _aal += len;

         if (explicitTagging) {
            _aal += buffer.EncodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
         }

         return (_aal);
      }

      public override void Print (System.IO.TextWriter _out, 
                                  string _varName, int _level)
      {
         Indent (_out, _level);
         _out.WriteLine (_varName + " {");
         if (action != null) action.Print (_out, "action", _level+1);
         if (pubInfos != null) pubInfos.Print (_out, "pubInfos", _level+1);
         Indent (_out, _level);
         _out.WriteLine ("}");
      }
   }
}
