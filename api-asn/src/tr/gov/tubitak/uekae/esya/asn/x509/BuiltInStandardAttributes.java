/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.4, Date: 04-Oct-2013.
 */
package tr.gov.tubitak.uekae.esya.asn.x509;

import com.objsys.asn1j.runtime.*;

public class BuiltInStandardAttributes extends Asn1Type {
   private static final long serialVersionUID = 55;
   static {
      setKey (_ExplicitRtkey._rtkey);
   }

   public CountryName country_name;  // optional
   public AdministrationDomainName administration_domain_name;  // optional
   public Asn1NumericString network_address;  // optional
   public Asn1PrintableString terminal_identifier;  // optional
   public PrivateDomainName private_domain_name;  // optional
   public Asn1PrintableString organization_name;  // optional
   public Asn1NumericString numeric_user_identifier;  // optional
   public PersonalName personal_name;  // optional
   public OrganizationalUnitNames organizational_unit_names;  // optional

   public BuiltInStandardAttributes () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BuiltInStandardAttributes (
      CountryName country_name_,
      AdministrationDomainName administration_domain_name_,
      Asn1NumericString network_address_,
      Asn1PrintableString terminal_identifier_,
      PrivateDomainName private_domain_name_,
      Asn1PrintableString organization_name_,
      Asn1NumericString numeric_user_identifier_,
      PersonalName personal_name_,
      OrganizationalUnitNames organizational_unit_names_
   ) {
      super();
      country_name = country_name_;
      administration_domain_name = administration_domain_name_;
      network_address = network_address_;
      terminal_identifier = terminal_identifier_;
      private_domain_name = private_domain_name_;
      organization_name = organization_name_;
      numeric_user_identifier = numeric_user_identifier_;
      personal_name = personal_name_;
      organizational_unit_names = organizational_unit_names_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public BuiltInStandardAttributes (CountryName country_name_,
      AdministrationDomainName administration_domain_name_,
      String network_address_,
      String terminal_identifier_,
      PrivateDomainName private_domain_name_,
      String organization_name_,
      String numeric_user_identifier_,
      PersonalName personal_name_,
      OrganizationalUnitNames organizational_unit_names_
   ) {
      super();
      country_name = country_name_;
      administration_domain_name = administration_domain_name_;
      network_address = new Asn1NumericString (network_address_);
      terminal_identifier = new Asn1PrintableString (terminal_identifier_);
      private_domain_name = private_domain_name_;
      organization_name = new Asn1PrintableString (organization_name_);
      numeric_user_identifier = new Asn1NumericString (numeric_user_identifier_);
      personal_name = personal_name_;
      organizational_unit_names = organizational_unit_names_;
   }

   public void init () {
      country_name = null;
      administration_domain_name = null;
      network_address = null;
      terminal_identifier = null;
      private_domain_name = null;
      organization_name = null;
      numeric_user_identifier = null;
      personal_name = null;
      organizational_unit_names = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof BuiltInStandardAttributes) ) return false;

      BuiltInStandardAttributes rhs = (BuiltInStandardAttributes) obj;

      if (country_name == null) {
         if (rhs.country_name != null) return false;
      }
      else {
         if (!country_name.equals(rhs.country_name)) {
            return false;
         }
      }

      if (administration_domain_name == null) {
         if (rhs.administration_domain_name != null) return false;
      }
      else {
         if (!administration_domain_name.equals(rhs.administration_domain_name)) {
            return false;
         }
      }

      if (network_address == null) {
         if (rhs.network_address != null) return false;
      }
      else {
         if (!network_address.equals(rhs.network_address)) {
            return false;
         }
      }

      if (terminal_identifier == null) {
         if (rhs.terminal_identifier != null) return false;
      }
      else {
         if (!terminal_identifier.equals(rhs.terminal_identifier)) {
            return false;
         }
      }

      if (private_domain_name == null) {
         if (rhs.private_domain_name != null) return false;
      }
      else {
         if (!private_domain_name.equals(rhs.private_domain_name)) {
            return false;
         }
      }

      if (organization_name == null) {
         if (rhs.organization_name != null) return false;
      }
      else {
         if (!organization_name.equals(rhs.organization_name)) {
            return false;
         }
      }

      if (numeric_user_identifier == null) {
         if (rhs.numeric_user_identifier != null) return false;
      }
      else {
         if (!numeric_user_identifier.equals(rhs.numeric_user_identifier)) {
            return false;
         }
      }

      if (personal_name == null) {
         if (rhs.personal_name != null) return false;
      }
      else {
         if (!personal_name.equals(rhs.personal_name)) {
            return false;
         }
      }

      if (organizational_unit_names == null) {
         if (rhs.organizational_unit_names != null) return false;
      }
      else {
         if (!organizational_unit_names.equals(rhs.organizational_unit_names)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (country_name != null) __code = 31*__code + country_name.hashCode();
      if (administration_domain_name != null) __code = 31*__code + administration_domain_name.hashCode();
      if (network_address != null) __code = 31*__code + network_address.hashCode();
      if (terminal_identifier != null) __code = 31*__code + terminal_identifier.hashCode();
      if (private_domain_name != null) __code = 31*__code + private_domain_name.hashCode();
      if (organization_name != null) __code = 31*__code + organization_name.hashCode();
      if (numeric_user_identifier != null) __code = 31*__code + numeric_user_identifier.hashCode();
      if (personal_name != null) __code = 31*__code + personal_name.hashCode();
      if (organizational_unit_names != null) __code = 31*__code + organizational_unit_names.hashCode();

      return __code;
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, java.io.IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

      init ();

      // decode SEQUENCE

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      IntHolder elemLen = new IntHolder();

      // decode country_name

      if (_context.matchElemTag (Asn1Tag.APPL, Asn1Tag.CONS, 1, elemLen, false)) {
         country_name = new CountryName();
         country_name.decode (buffer, true, elemLen.value);
      }

      // decode administration_domain_name

      if (_context.matchElemTag (Asn1Tag.APPL, Asn1Tag.CONS, 2, elemLen, false)) {
         administration_domain_name = new AdministrationDomainName();
         administration_domain_name.decode (buffer, true, elemLen.value);
      }

      // decode network_address

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.PRIM, 0, elemLen, true)) {
         network_address = new Asn1NumericString();
         network_address.decode (buffer, false, elemLen.value);
         if (!((network_address.getLength() >= 1 && network_address.getLength() <= 16))) {
            throw new Asn1ConsVioException ("network_address.getLength()", network_address.getLength());
         }

      }

      // decode terminal_identifier

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.PRIM, 1, elemLen, true)) {
         terminal_identifier = new Asn1PrintableString();
         terminal_identifier.decode (buffer, false, elemLen.value);
         if (!((terminal_identifier.getLength() >= 1 && terminal_identifier.
            getLength() <= 24))) {
            throw new Asn1ConsVioException ("terminal_identifier.getLength()", terminal_identifier.getLength());
         }

      }

      // decode private_domain_name

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.CONS, 2, elemLen, true)) {
         int offset = buffer.getByteCount();
         private_domain_name = new PrivateDomainName();
         private_domain_name.decode (buffer, true, elemLen.value);

         int declen = buffer.getByteCount() - offset;
         if (declen != elemLen.value && elemLen.value != Asn1Status.INDEFLEN)
            throw new Asn1InvalidLengthException();

      }

      // decode organization_name

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.PRIM, 3, elemLen, true)) {
         organization_name = new Asn1PrintableString();
         organization_name.decode (buffer, false, elemLen.value);
         if (!((organization_name.getLength() >= 1 && organization_name.getLength()
             <= 256))) {
            throw new Asn1ConsVioException ("organization_name.getLength()", organization_name.getLength());
         }

      }

      // decode numeric_user_identifier

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.PRIM, 4, elemLen, true)) {
         numeric_user_identifier = new Asn1NumericString();
         numeric_user_identifier.decode (buffer, false, elemLen.value);
         if (!((numeric_user_identifier.getLength() >= 1 && numeric_user_identifier.
            getLength() <= 32))) {
            throw new Asn1ConsVioException ("numeric_user_identifier.getLength()", numeric_user_identifier.getLength());
         }

      }

      // decode personal_name

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.CONS, 5, elemLen, true)) {
         int offset = buffer.getByteCount();
         personal_name = new PersonalName();
         personal_name.decode (buffer, false, elemLen.value);

         int declen = buffer.getByteCount() - offset;
         if (declen != elemLen.value && elemLen.value != Asn1Status.INDEFLEN)
            throw new Asn1InvalidLengthException();

      }

      // decode organizational_unit_names

      if (_context.matchElemTag (Asn1Tag.CTXT, Asn1Tag.CONS, 6, elemLen, true)) {
         int offset = buffer.getByteCount();
         organizational_unit_names = new OrganizationalUnitNames();
         organizational_unit_names.decode (buffer, false, elemLen.value);

         int declen = buffer.getByteCount() - offset;
         if (declen != elemLen.value && elemLen.value != Asn1Status.INDEFLEN)
            throw new Asn1InvalidLengthException();

      }

      if (!_context.expired()) {
         Asn1Tag _tag = buffer.peekTag ();
         if (_tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 1) ||
             _tag.equals (Asn1Tag.APPL, Asn1Tag.CONS, 2) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.PRIM, 0) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.PRIM, 1) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.CONS, 2) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.PRIM, 3) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.PRIM, 4) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.CONS, 5) ||
             _tag.equals (Asn1Tag.CTXT, Asn1Tag.CONS, 6))
            throw new Asn1SeqOrderException ();

      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode organizational_unit_names

      if (organizational_unit_names != null) {
         len = organizational_unit_names.encode (buffer, false);
         len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.CONS, 6, len);
         _aal += len;
      }

      // encode personal_name

      if (personal_name != null) {
         len = personal_name.encode (buffer, false);
         len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.CONS, 5, len);
         _aal += len;
      }

      // encode numeric_user_identifier

      if (numeric_user_identifier != null) {
         if (!((numeric_user_identifier.getLength() >= 1 && numeric_user_identifier.
            getLength() <= 32))) {
            throw new Asn1ConsVioException ("numeric_user_identifier.getLength()", numeric_user_identifier.getLength());
         }

         len = numeric_user_identifier.encode (buffer, false);
         len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 4, len);
         _aal += len;
      }

      // encode organization_name

      if (organization_name != null) {
         if (!((organization_name.getLength() >= 1 && organization_name.getLength()
             <= 256))) {
            throw new Asn1ConsVioException ("organization_name.getLength()", organization_name.getLength());
         }

         len = organization_name.encode (buffer, false);
         len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 3, len);
         _aal += len;
      }

      // encode private_domain_name

      if (private_domain_name != null) {
         len = private_domain_name.encode (buffer, true);
         len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.CONS, 2, len);
         _aal += len;
      }

      // encode terminal_identifier

      if (terminal_identifier != null) {
         if (!((terminal_identifier.getLength() >= 1 && terminal_identifier.
            getLength() <= 24))) {
            throw new Asn1ConsVioException ("terminal_identifier.getLength()", terminal_identifier.getLength());
         }

         len = terminal_identifier.encode (buffer, false);
         len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 1, len);
         _aal += len;
      }

      // encode network_address

      if (network_address != null) {
         if (!((network_address.getLength() >= 1 && network_address.getLength() <= 16))) {
            throw new Asn1ConsVioException ("network_address.getLength()", network_address.getLength());
         }

         len = network_address.encode (buffer, false);
         len += buffer.encodeTagAndLength (Asn1Tag.CTXT, Asn1Tag.PRIM, 0, len);
         _aal += len;
      }

      // encode administration_domain_name

      if (administration_domain_name != null) {
         len = administration_domain_name.encode (buffer, true);
         _aal += len;
      }

      // encode country_name

      if (country_name != null) {
         len = country_name.encode (buffer, true);
         _aal += len;
      }

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
      }

      return (_aal);
   }

   public void print (java.io.PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (country_name != null) country_name.print (_out, "country_name", _level+1);
      if (administration_domain_name != null) administration_domain_name.print (_out, "administration_domain_name", _level+1);
      if (network_address != null) network_address.print (_out, "network_address", _level+1);
      if (terminal_identifier != null) terminal_identifier.print (_out, "terminal_identifier", _level+1);
      if (private_domain_name != null) private_domain_name.print (_out, "private_domain_name", _level+1);
      if (organization_name != null) organization_name.print (_out, "organization_name", _level+1);
      if (numeric_user_identifier != null) numeric_user_identifier.print (_out, "numeric_user_identifier", _level+1);
      if (personal_name != null) personal_name.print (_out, "personal_name", _level+1);
      if (organizational_unit_names != null) organizational_unit_names.print (_out, "organizational_unit_names", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }
}
