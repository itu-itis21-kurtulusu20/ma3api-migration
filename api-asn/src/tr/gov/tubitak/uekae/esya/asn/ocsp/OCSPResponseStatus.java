/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.4, Date: 04-Oct-2013.
 */
package tr.gov.tubitak.uekae.esya.asn.ocsp;

import com.objsys.asn1j.runtime.*;

public class OCSPResponseStatus extends Asn1Enumerated {

	private static final long serialVersionUID = 55;
	static {
		setKey(_ocspRtkey._rtkey);
	}

   // Integer constants for switch-case
   public static final int _SUCCESSFUL = 0;
   public static final int _MALFORMEDREQUEST = 1;
   public static final int _INTERNALERROR = 2;
   public static final int _TRYLATER = 3;
   public static final int _SIGREQUIRED = 5;
   public static final int _UNAUTHORIZED = 6;

   // Singleton instances of OCSPResponseStatus
   protected static final OCSPResponseStatus _successful = new OCSPResponseStatus(0);
   protected static final OCSPResponseStatus _malformedRequest = new OCSPResponseStatus(1);
   protected static final OCSPResponseStatus _internalError = new OCSPResponseStatus(2);
   protected static final OCSPResponseStatus _tryLater = new OCSPResponseStatus(3);
   protected static final OCSPResponseStatus _sigRequired = new OCSPResponseStatus(5);
   protected static final OCSPResponseStatus _unauthorized = new OCSPResponseStatus(6);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   5
    *   6
    */
   protected OCSPResponseStatus (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for successful.
    */
   public static OCSPResponseStatus successful() {
      return _successful;
   }

   /**
    * Singleton accessor method for malformedRequest.
    */
   public static OCSPResponseStatus malformedRequest() {
      return _malformedRequest;
   }

   /**
    * Singleton accessor method for internalError.
    */
   public static OCSPResponseStatus internalError() {
      return _internalError;
   }

   /**
    * Singleton accessor method for tryLater.
    */
   public static OCSPResponseStatus tryLater() {
      return _tryLater;
   }

   /**
    * Singleton accessor method for sigRequired.
    */
   public static OCSPResponseStatus sigRequired() {
      return _sigRequired;
   }

   /**
    * Singleton accessor method for unauthorized.
    */
   public static OCSPResponseStatus unauthorized() {
      return _unauthorized;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1BerDecoder{

      public Asn1Type decode(Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength) throws Asn1Exception, java.io.IOException
      {
         return OCSPResponseStatus.valueOf( buffer.decodeEnumValue(explicit, implicitLength) );
      }
   }
   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static OCSPResponseStatus valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return successful();
         case 1: return malformedRequest();
         case 2: return internalError();
         case 3: return tryLater();
         case 5: return sigRequired();
         case 6: return unauthorized();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      if (!(value == 0 ||
            value == 1 ||
            value == 2 ||
            value == 3 ||
            value == 5 ||
            value == 6))
      {
         throw new Asn1InvalidEnumException (value);
      }

      int len;
      len = super.encode (buffer, explicit);
      return (len);
   }

   public int getValue(){
       return value;
   }
   
   public String toString () {
      switch ((int)value) {
         case 0: return ("successful");
         case 1: return ("malformedRequest");
         case 2: return ("internalError");
         case 3: return ("tryLater");
         case 5: return ("sigRequired");
         case 6: return ("unauthorized");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.io.PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }
}
