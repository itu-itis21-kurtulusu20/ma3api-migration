/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.4, Date: 04-Oct-2013.
 */
package tr.gov.tubitak.uekae.esya.asn.depo;

import com.objsys.asn1j.runtime.*;

public class KokSertifikaTipi extends Asn1Enumerated {

	private static final long serialVersionUID = 55;
	static {
		setKey(_depoRtkey._rtkey);
	}

   // Integer constants for switch-case
   public static final int _KOKSERTIFIKA = 1;
   public static final int _CAPRAZSERTIFIKA = 2;
   public static final int _SMSERTIFIKASI = 3;
   public static final int _HIZMETSERTIFIKASI = 4;

   // Singleton instances of KokSertifikaTipi
   protected static final KokSertifikaTipi _kokSertifika = new KokSertifikaTipi(1);
   protected static final KokSertifikaTipi _caprazSertifika = new KokSertifikaTipi(2);
   protected static final KokSertifikaTipi _smSertifikasi = new KokSertifikaTipi(3);
   protected static final KokSertifikaTipi _hizmetSertifikasi = new KokSertifikaTipi(4);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   1
    *   2
    *   3
    *   4
    */
   protected KokSertifikaTipi (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for kokSertifika.
    */
   public static KokSertifikaTipi kokSertifika() {
      return _kokSertifika;
   }

   /**
    * Singleton accessor method for caprazSertifika.
    */
   public static KokSertifikaTipi caprazSertifika() {
      return _caprazSertifika;
   }

   /**
    * Singleton accessor method for smSertifikasi.
    */
   public static KokSertifikaTipi smSertifikasi() {
      return _smSertifikasi;
   }

   /**
    * Singleton accessor method for hizmetSertifikasi.
    */
   public static KokSertifikaTipi hizmetSertifikasi() {
      return _hizmetSertifikasi;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1BerDecoder{

      public Asn1Type decode(Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength) throws Asn1Exception, java.io.IOException
      {
         return KokSertifikaTipi.valueOf( buffer.decodeEnumValue(explicit, implicitLength) );
      }
   }
   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static KokSertifikaTipi valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 1: return kokSertifika();
         case 2: return caprazSertifika();
         case 3: return smSertifikasi();
         case 4: return hizmetSertifikasi();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      if (!(value == 1 ||
            value == 2 ||
            value == 3 ||
            value == 4))
      {
         throw new Asn1InvalidEnumException (value);
      }

      int len;
      len = super.encode (buffer, explicit);
      return (len);
   }

   public int getValue(){
       return value;
   }
   
   public String toString () {
      switch ((int)value) {
         case 1: return ("kokSertifika");
         case 2: return ("caprazSertifika");
         case 3: return ("smSertifikasi");
         case 4: return ("hizmetSertifikasi");
         default: return ("UNDEFINED");
      }
   }

   public void print (java.io.PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " = " + toString());
   }
}
