/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.4, Date: 04-Oct-2013.
 */
package tr.gov.tubitak.uekae.esya.asn.x509;

import com.objsys.asn1j.runtime.*;

public class TBSCertList_revokedCertificates_element extends Asn1Type {
   private static final long serialVersionUID = 55;
   static {
      setKey (_ExplicitRtkey._rtkey);
   }

   public Asn1BigInteger userCertificate;
   public Time revocationDate;
   public Extensions crlEntryExtensions;  // optional

   public TBSCertList_revokedCertificates_element () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public TBSCertList_revokedCertificates_element (
      Asn1BigInteger userCertificate_,
      Time revocationDate_,
      Extensions crlEntryExtensions_
   ) {
      super();
      userCertificate = userCertificate_;
      revocationDate = revocationDate_;
      crlEntryExtensions = crlEntryExtensions_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public TBSCertList_revokedCertificates_element (
      Asn1BigInteger userCertificate_,
      Time revocationDate_
   ) {
      super();
      userCertificate = userCertificate_;
      revocationDate = revocationDate_;
   }

   public void init () {
      userCertificate = null;
      revocationDate = null;
      crlEntryExtensions = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof TBSCertList_revokedCertificates_element) ) return false;

      TBSCertList_revokedCertificates_element rhs = (TBSCertList_revokedCertificates_element) obj;

      if (userCertificate == null) {
         if (rhs.userCertificate != null) return false;
      }
      else {
         if (!userCertificate.equals(rhs.userCertificate)) {
            return false;
         }
      }

      if (revocationDate == null) {
         if (rhs.revocationDate != null) return false;
      }
      else {
         if (!revocationDate.equals(rhs.revocationDate)) {
            return false;
         }
      }

      if (crlEntryExtensions == null) {
         if (rhs.crlEntryExtensions != null) return false;
      }
      else {
         if (!crlEntryExtensions.equals(rhs.crlEntryExtensions)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (userCertificate != null) __code = 31*__code + userCertificate.hashCode();
      if (revocationDate != null) __code = 31*__code + revocationDate.hashCode();
      if (crlEntryExtensions != null) __code = 31*__code + crlEntryExtensions.hashCode();

      return __code;
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, java.io.IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

      init ();

      // decode SEQUENCE

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      IntHolder elemLen = new IntHolder();

      // decode userCertificate

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 2, elemLen, false)) {
         userCertificate = new Asn1BigInteger();
         userCertificate.decode (buffer, true, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer, "userCertificate");

      // decode revocationDate

      if (!_context.expired()) {
         Asn1Tag tag = buffer.peekTag ();
         if (tag.equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 23) ||
             tag.equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 24))
         {
            revocationDate = new Time();
            revocationDate.decode (buffer, true, elemLen.value);
         }
         else throw new Asn1MissingRequiredException (buffer, "revocationDate");
      }
      else throw new Asn1MissingRequiredException (buffer, "revocationDate");

      // decode crlEntryExtensions

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         crlEntryExtensions = new Extensions();
         crlEntryExtensions.decode (buffer, true, elemLen.value);
      }

      if (!_context.expired()) {
         Asn1Tag _tag = buffer.peekTag ();
         if (_tag.equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 2) ||
             _tag.equals (Asn1Tag.UNIV, Asn1Tag.CONS, 16))
            throw new Asn1SeqOrderException ();

      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode crlEntryExtensions

      if (crlEntryExtensions != null) {
         len = crlEntryExtensions.encode (buffer, true);
         _aal += len;
      }

      // encode revocationDate

      if (revocationDate != null) {
         len = revocationDate.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("revocationDate");

      // encode userCertificate

      if (userCertificate != null) {
         len = userCertificate.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("userCertificate");

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
      }

      return (_aal);
   }

   public void print (java.io.PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (userCertificate != null) userCertificate.print (_out, "userCertificate", _level+1);
      if (revocationDate != null) revocationDate.print (_out, "revocationDate", _level+1);
      if (crlEntryExtensions != null) crlEntryExtensions.print (_out, "crlEntryExtensions", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }
}
