/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.4, Date: 04-Oct-2013.
 */
package tr.gov.tubitak.uekae.esya.asn.cms;

import com.objsys.asn1j.runtime.*;
import tr.gov.tubitak.uekae.esya.asn.x509.AlgorithmIdentifier;

public class ATSHashIndex extends Asn1Type {
   private static final long serialVersionUID = 55;
   static {
      setKey (_etsi101733Rtkey._rtkey);
   }

   public AlgorithmIdentifier hashIndAlgorithm;  // optional
   public ATSHashIndex_certificatesHashIndex certificatesHashIndex;
   public ATSHashIndex_crlsHashIndex crlsHashIndex;
   public ATSHashIndex_unsignedAttrsHashIndex unsignedAttrsHashIndex;

   public ATSHashIndex () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ATSHashIndex (
      AlgorithmIdentifier hashIndAlgorithm_,
      ATSHashIndex_certificatesHashIndex certificatesHashIndex_,
      ATSHashIndex_crlsHashIndex crlsHashIndex_,
      ATSHashIndex_unsignedAttrsHashIndex unsignedAttrsHashIndex_
   ) {
      super();
      hashIndAlgorithm = hashIndAlgorithm_;
      certificatesHashIndex = certificatesHashIndex_;
      crlsHashIndex = crlsHashIndex_;
      unsignedAttrsHashIndex = unsignedAttrsHashIndex_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public ATSHashIndex (
      ATSHashIndex_certificatesHashIndex certificatesHashIndex_,
      ATSHashIndex_crlsHashIndex crlsHashIndex_,
      ATSHashIndex_unsignedAttrsHashIndex unsignedAttrsHashIndex_
   ) {
      super();
      certificatesHashIndex = certificatesHashIndex_;
      crlsHashIndex = crlsHashIndex_;
      unsignedAttrsHashIndex = unsignedAttrsHashIndex_;
   }

   public void init () {
      hashIndAlgorithm = null;
      certificatesHashIndex = null;
      crlsHashIndex = null;
      unsignedAttrsHashIndex = null;
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, java.io.IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

      init ();

      // decode SEQUENCE

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      IntHolder elemLen = new IntHolder();

      // decode hashIndAlgorithm

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         hashIndAlgorithm = new AlgorithmIdentifier();
         hashIndAlgorithm.decode (buffer, true, elemLen.value);
      }

      // decode certificatesHashIndex

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         certificatesHashIndex = new ATSHashIndex_certificatesHashIndex();
         certificatesHashIndex.decode (buffer, true, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer, "certificatesHashIndex");

      // decode crlsHashIndex

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         crlsHashIndex = new ATSHashIndex_crlsHashIndex();
         crlsHashIndex.decode (buffer, true, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer, "crlsHashIndex");

      // decode unsignedAttrsHashIndex

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         unsignedAttrsHashIndex = new ATSHashIndex_unsignedAttrsHashIndex();
         unsignedAttrsHashIndex.decode (buffer, true, elemLen.value);
      }
      else throw new Asn1MissingRequiredException (buffer, "unsignedAttrsHashIndex");

      if (!_context.expired()) {
         Asn1Tag _tag = buffer.peekTag ();
         if (_tag.equals (Asn1Tag.UNIV, Asn1Tag.CONS, 16))
            throw new Asn1SeqOrderException ();

      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode unsignedAttrsHashIndex

      if (unsignedAttrsHashIndex != null) {
         len = unsignedAttrsHashIndex.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("unsignedAttrsHashIndex");

      // encode crlsHashIndex

      if (crlsHashIndex != null) {
         len = crlsHashIndex.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("crlsHashIndex");

      // encode certificatesHashIndex

      if (certificatesHashIndex != null) {
         len = certificatesHashIndex.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("certificatesHashIndex");

      // encode hashIndAlgorithm

      if (hashIndAlgorithm != null) {
         len = hashIndAlgorithm.encode (buffer, true);
         _aal += len;
      }

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
      }

      return (_aal);
   }

   public void print (java.io.PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (hashIndAlgorithm != null) hashIndAlgorithm.print (_out, "hashIndAlgorithm", _level+1);
      if (certificatesHashIndex != null) certificatesHashIndex.print (_out, "certificatesHashIndex", _level+1);
      if (crlsHashIndex != null) crlsHashIndex.print (_out, "crlsHashIndex", _level+1);
      if (unsignedAttrsHashIndex != null) unsignedAttrsHashIndex.print (_out, "unsignedAttrsHashIndex", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }
}
