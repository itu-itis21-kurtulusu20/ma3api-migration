/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.4, Date: 04-Oct-2013.
 */
package tr.gov.tubitak.uekae.esya.asn.esya;

import com.objsys.asn1j.runtime.*;

public class ESYACAControlRepMsg extends Asn1Type {
   
	private static final long serialVersionUID = 55;
	static {
		setKey(_esyaRtkey._rtkey);
	}

   public ESYACAControlRepMsg_donuskodu donuskodu = null;
   public ESYACAControlRepMsg_cevapislemtipi cevapislemtipi = null;  // optional
   public Asn1UTF8String message;  // optional
   public Asn1UTF8String errorStr;  // optional
   public ESYACAStatus status;  // optional
   public ESYAParametreleri params;  // optional

   public ESYACAControlRepMsg () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ESYACAControlRepMsg (
      ESYACAControlRepMsg_donuskodu donuskodu_,
      ESYACAControlRepMsg_cevapislemtipi cevapislemtipi_,
      Asn1UTF8String message_,
      Asn1UTF8String errorStr_,
      ESYACAStatus status_,
      ESYAParametreleri params_
   ) {
      super();
      donuskodu = donuskodu_;
      cevapislemtipi = cevapislemtipi_;
      message = message_;
      errorStr = errorStr_;
      status = status_;
      params = params_;
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public ESYACAControlRepMsg (
      ESYACAControlRepMsg_donuskodu donuskodu_
   ) {
      super();
      donuskodu = donuskodu_;
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public ESYACAControlRepMsg (ESYACAControlRepMsg_donuskodu donuskodu_,
      ESYACAControlRepMsg_cevapislemtipi cevapislemtipi_,
      String message_,
      String errorStr_,
      ESYACAStatus status_,
      ESYAParametreleri params_
   ) {
      super();
      donuskodu = donuskodu_;
      cevapislemtipi = cevapislemtipi_;
      message = new Asn1UTF8String (message_);
      errorStr = new Asn1UTF8String (errorStr_);
      status = status_;
      params = params_;
   }

   public void init () {
      donuskodu = null;
      cevapislemtipi = null;
      message = null;
      errorStr = null;
      status = null;
      params = null;
   }

   public void decode
      (Asn1BerDecodeBuffer buffer, boolean explicit, int implicitLength)
      throws Asn1Exception, java.io.IOException
   {
      int llen = (explicit) ?
         matchTag (buffer, Asn1Tag.SEQUENCE) : implicitLength;

      init ();

      // decode SEQUENCE

      Asn1BerDecodeContext _context =
         new Asn1BerDecodeContext (buffer, llen);

      IntHolder elemLen = new IntHolder();

      // decode donuskodu

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 10, elemLen, false)) {
         int tval = buffer.decodeEnumValue (ESYACAControlRepMsg_donuskodu.TAG, true, elemLen.value);
         donuskodu = ESYACAControlRepMsg_donuskodu.valueOf (tval);
      }
      else throw new Asn1MissingRequiredException (buffer, "donuskodu");

      // decode cevapislemtipi

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 10, elemLen, false)) {
         int tval = buffer.decodeEnumValue (ESYACAControlRepMsg_cevapislemtipi.TAG, true, elemLen.value);
         cevapislemtipi = ESYACAControlRepMsg_cevapislemtipi.valueOf (tval);
      }

      // decode message

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 12, elemLen, false)) {
         message = new Asn1UTF8String();
         message.decode (buffer, true, elemLen.value);
      }

      // decode errorStr

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.PRIM, 12, elemLen, false)) {
         errorStr = new Asn1UTF8String();
         errorStr.decode (buffer, true, elemLen.value);
      }

      // decode status

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         status = new ESYACAStatus();
         status.decode (buffer, true, elemLen.value);
      }

      // decode params

      if (_context.matchElemTag (Asn1Tag.UNIV, Asn1Tag.CONS, 16, elemLen, false)) {
         params = new ESYAParametreleri();
         params.decode (buffer, true, elemLen.value);
      }

      if (!_context.expired()) {
         Asn1Tag _tag = buffer.peekTag ();
         if (_tag.equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 10) ||
             _tag.equals (Asn1Tag.UNIV, Asn1Tag.PRIM, 12) ||
             _tag.equals (Asn1Tag.UNIV, Asn1Tag.CONS, 16))
            throw new Asn1SeqOrderException ();

      }
   }

   public int encode (Asn1BerEncodeBuffer buffer, boolean explicit)
      throws Asn1Exception
   {
      int _aal = 0, len;

      // encode params

      if (params != null) {
         len = params.encode (buffer, true);
         _aal += len;
      }

      // encode status

      if (status != null) {
         len = status.encode (buffer, true);
         _aal += len;
      }

      // encode errorStr

      if (errorStr != null) {
         len = errorStr.encode (buffer, true);
         _aal += len;
      }

      // encode message

      if (message != null) {
         len = message.encode (buffer, true);
         _aal += len;
      }

      // encode cevapislemtipi

      if (cevapislemtipi != null) {
         len = cevapislemtipi.encode (buffer, true);
         _aal += len;
      }

      // encode donuskodu

      if (donuskodu != null) {
         len = donuskodu.encode (buffer, true);
         _aal += len;
      }
      else throw new Asn1MissingRequiredException ("donuskodu");

      if (explicit) {
         _aal += buffer.encodeTagAndLength (Asn1Tag.SEQUENCE, _aal);
      }

      return (_aal);
   }

   public void print (java.io.PrintStream _out, String _varName, int _level)
   {
      indent (_out, _level);
      _out.println (_varName + " {");
      if (donuskodu != null) donuskodu.print (_out, "donuskodu", _level+1);
      if (cevapislemtipi != null) cevapislemtipi.print (_out, "cevapislemtipi", _level+1);
      if (message != null) message.print (_out, "message", _level+1);
      if (errorStr != null) errorStr.print (_out, "errorStr", _level+1);
      if (status != null) status.print (_out, "status", _level+1);
      if (params != null) params.print (_out, "params", _level+1);
      indent (_out, _level);
      _out.println ("}");
   }
}
